{"version":3,"sources":["webpack://SMF/webpack/universalModuleDefinition","webpack://SMF/webpack/bootstrap","webpack://SMF/./src/meta.js","webpack://SMF/./src/midi_event.js","webpack://SMF/./src/riff.js","webpack://SMF/./src/smf.js"],"names":["Meta","version","date","Event","constructor","subtype","deltaTime","time","ChannelEvent","channel","optParameter1","optParameter2","parameter1","parameter2","SystemExclusiveEvent","data","MetaEvent","Riff","input","optParams","ip","index","length","chunkList","offset","padding","bigEndian","parse","parseChunk","size","push","RiffChunk","String","fromCharCode","getChunk","chunk","getNumberOfChunks","type","SMF","chunkIndex","riffParser_","formatType","numberOfTracks","timeDivision","tracks","plainTracks","build","i","il","parseHeaderChunk","parseTrackChunk","Error","eventType","prevEventType","prevChannel","tmp","totalTime","status","event","plainBytes","readNumber","result","eventQueue","plainQueue","table","subarray","apply","console","warn","toString","Uint8Array"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AACA,MAAMA,IAAI,GAAG;AACXC,SAAO,EAAE,OADE;AAEXC,MAAI,EAAE;AAFK,CAAb;AAIeF,mEAAf,E;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;;;AAGA,MAAMG,KAAN,CAAY;AACV;;;;;AAKAC,aAAW,CAACC,OAAD,EAAUC,SAAV,EAAqBC,IAArB,EAA2B;AACpC;AACA,SAAKF,OAAL,GAAeA,OAAf;AACA;;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA;;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACD;;AAbS;AAgBZ;;;;;;AAIA,MAAMC,YAAN,SAA2BL,KAA3B,CAAiC;AAC/B;;;;;;;;AAQAC,aAAW,CAACC,OAAD,EAAUC,SAAV,EAAqBC,IAArB,EAA2BE,OAA3B,EAAoCC,aAApC,EAAmDC,aAAnD,EAAkE;AAC3E,UAAMN,OAAN,EAAeC,SAAf,EAA0BC,IAA1B;AACA;;AACA,SAAKE,OAAL,GAAeA,OAAf;AACA;;AACA,SAAKG,UAAL,GAAkBF,aAAlB;AACA;;AACA,SAAKG,UAAL,GAAkBF,aAAlB;AACD;;AAjB8B;AAoBjC;;;;;;AAIA,MAAMG,oBAAN,SAAmCX,KAAnC,CAAyC;AACvC;;;;;;AAMAC,aAAW,CAACC,OAAD,EAAUC,SAAV,EAAqBC,IAArB,EAA2BQ,IAA3B,EAAiC;AAC1C,UAAMV,OAAN,EAAeC,SAAf,EAA0BC,IAA1B;AACA;;AACA,SAAKQ,IAAL,GAAYA,IAAZ;AACD;;AAXsC;AAczC;;;;;;AAIA,MAAMC,SAAN,SAAwBb,KAAxB,CAA8B;AAC5B;;;;;;AAMAC,aAAW,CAACC,OAAD,EAAUC,SAAV,EAAqBC,IAArB,EAA2BQ,IAA3B,EAAiC;AAC1C,UAAMV,OAAN,EAAeC,SAAf,EAA0BC,IAA1B;AACA;;AACA,SAAKQ,IAAL,GAAYA,IAAZ;AACD;;AAX2B;;;;;;;;;;;;;;ACjE9B;AAAA;AAAA;;;AAGe,MAAME,IAAN,CAAW;AACxB;;;;AAIAb,aAAW,CAACc,KAAD,EAAQC,SAAS,GAAG,EAApB,EAAwB;AACjC;AACA,SAAKD,KAAL,GAAaA,KAAb;AACA;;AACA,SAAKE,EAAL,GAAUD,SAAS,CAACE,KAAV,IAAmB,CAA7B;AACA;;AACA,SAAKC,MAAL,GAAcH,SAAS,CAACG,MAAV,IAAoBJ,KAAK,CAACI,MAAN,GAAe,KAAKF,EAAtD;AACA;;AACA,SAAKG,SAAL;AACA;;AACA,SAAKC,MAAL,GAAc,KAAKJ,EAAnB;AACA;;AACA,SAAKK,OAAL,GACEN,SAAS,CAACM,OAAV,KAAsB,KAAK,CAA3B,GAA+BN,SAAS,CAACM,OAAzC,GAAmD,IADrD;AAEA;;AACA,SAAKC,SAAL,GACEP,SAAS,CAACO,SAAV,KAAwB,KAAK,CAA7B,GAAiCP,SAAS,CAACO,SAA3C,GAAuD,KADzD;AAED;AAED;;;;AAEAC,OAAK,GAAG;AACN;AACA,UAAML,MAAM,GAAG,KAAKA,MAAL,GAAc,KAAKE,MAAlC;AAEA,SAAKD,SAAL,GAAiB,EAAjB;;AAEA,WAAO,KAAKH,EAAL,GAAUE,MAAjB,EAAyB;AACvB,WAAKM,UAAL;AACD;AACF;AAED;;;;AAEAA,YAAU,GAAG;AACX;AACA,UAAMV,KAAK,GAAG,KAAKA,KAAnB;AACA;;AACA,QAAIE,EAAE,GAAG,KAAKA,EAAd;AACA;;AACA,QAAIS,IAAJ;AAEA,SAAKN,SAAL,CAAeO,IAAf,CAAoB,IAAIC,SAAJ,CAClBC,MAAM,CAACC,YAAP,CAAoBf,KAAK,CAACE,EAAE,EAAH,CAAzB,EAAiCF,KAAK,CAACE,EAAE,EAAH,CAAtC,EAA8CF,KAAK,CAACE,EAAE,EAAH,CAAnD,EAA2DF,KAAK,CAACE,EAAE,EAAH,CAAhE,CADkB,EAEjBS,IAAI,GAAG,KAAKH,SAAL,GACJ,CAAER,KAAK,CAACE,EAAE,EAAH,CAAL,IAAe,EAAhB,GAAuBF,KAAK,CAACE,EAAE,EAAH,CAAL,IAAe,EAAtC,GACAF,KAAK,CAACE,EAAE,EAAH,CAAL,IAAe,CADf,GACqBF,KAAK,CAACE,EAAE,EAAH,CAD3B,MACwC,CAFpC,GAGJ,CAAEF,KAAK,CAACE,EAAE,EAAH,CAAN,GAAiBF,KAAK,CAACE,EAAE,EAAH,CAAL,IAAe,CAAhC,GACAF,KAAK,CAACE,EAAE,EAAH,CAAL,IAAe,EADf,GACsBF,KAAK,CAACE,EAAE,EAAH,CAAL,IAAe,EADtC,MAC+C,CANjC,EAQlBA,EARkB,CAApB;AAWAA,MAAE,IAAIS,IAAN,CAnBW,CAqBX;;AACA,QAAI,KAAKJ,OAAL,IAAgB,CAAEL,EAAE,GAAG,KAAKI,MAAX,GAAqB,CAAtB,MAA6B,CAAjD,EAAoD;AAClDJ,QAAE;AACH;;AAED,SAAKA,EAAL,GAAUA,EAAV;AACD;AAED;;;;;;AAIAc,UAAQ,CAACb,KAAD,EAAQ;AACd;AACA,UAAMc,KAAK,GAAG,KAAKZ,SAAL,CAAeF,KAAf,CAAd;;AAEA,QAAIc,KAAK,KAAK,KAAK,CAAnB,EAAsB;AACpB,aAAO,IAAP;AACD;;AAED,WAAOA,KAAP;AACD;AAED;;;;;AAGAC,mBAAiB,GAAG;AAClB,WAAO,KAAKb,SAAL,CAAeD,MAAtB;AACD;;AAxFuB;AA2F1B;;;;;AAIA,MAAMS,SAAN,CAAgB;AACd;;;;;AAKA3B,aAAW,CAACiC,IAAD,EAAOR,IAAP,EAAaL,MAAb,EAAqB;AAC9B;AACA,SAAKa,IAAL,GAAYA,IAAZ;AACA;;AACA,SAAKR,IAAL,GAAYA,IAAZ;AACA;;AACA,SAAKL,MAAL,GAAcA,MAAd;AACD;;AAba,C;;;;;;;;;;;;AClGhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAEA;;;;AAGe,MAAMc,GAAN,CAAU;AACvB;;;;AAIAlC,aAAW,CAACc,KAAD,EAAQC,SAAS,GAAG,EAApB,EAAwB;AACjCA,aAAS,CAACM,OAAV,GAAoB,KAApB;AACAN,aAAS,CAACO,SAAV,GAAsB,IAAtB;AAEA;;AACA,SAAKR,KAAL,GAAaA,KAAb;AACA;;AACA,SAAKE,EAAL,GAAUD,SAAS,CAACE,KAAV,IAAmB,CAA7B;AACA;;AACA,SAAKkB,UAAL,GAAkB,CAAlB;AACA;;;;;AAIA,SAAKC,WAAL,GAAmB,IAAIvB,6CAAJ,CAASC,KAAT,EAAgBC,SAAhB,CAAnB,CAdiC,CAgBjC;;AAEA;;AACA,SAAKsB,UAAL,GAAkB,CAAlB;AACA;;AACA,SAAKC,cAAL,GAAsB,CAAtB;AACA;;AACA,SAAKC,YAAL,GAAoB,CAApB;AACA;;AACA,SAAKC,MAAL,GAAc,EAAd;AACA;;AACA,SAAKC,WAAL,GAAmB,EAAnB;AAEA;;AACA,SAAK5C,OAAL,GAAeD,6CAAI,CAACC,OAApB;AACA;;AACA,SAAK6C,KAAL,GAAa9C,6CAAI,CAAC8C,KAAlB;AACD;;AAED;;AAEAnB,OAAK,GAAG;AACN;AACA,QAAIoB,CAAC,GAAG,CAAR;AACA;;AACA,QAAIC,EAAE,GAAG,CAAT,CAJM,CAMN;;AACA,SAAKR,WAAL,CAAiBb,KAAjB,GAPM,CASN;;AACA,SAAKsB,gBAAL,GAVM,CAYN;;AACA,SAAKF,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAG,KAAKN,cAAtB,EAAsCK,CAAC,GAAGC,EAA1C,EAA8C,EAAED,CAAhD,EAAmD;AACjD,WAAKG,eAAL;AACD;AACF;;AAED;;AAEAD,kBAAgB,GAAG;AACjB;AACA,UAAMd,KAAK,GAAG,KAAKK,WAAL,CAAiBN,QAAjB,CAA0B,KAAKK,UAAL,EAA1B,CAAd;AACA;;AACA,UAAMxB,IAAI,GAAG,KAAKG,KAAlB;AACA;;AACA,QAAIE,EAAE,GAAGe,KAAK,CAACX,MAAf;;AAEA,QAAI,CAACW,KAAD,IAAUA,KAAK,CAACE,IAAN,KAAe,MAA7B,EAAqC;AACnC,YAAM,IAAIc,KAAJ,CAAU,0BAAV,CAAN;AACD;;AAED,SAAKV,UAAL,GAAmB1B,IAAI,CAACK,EAAE,EAAH,CAAJ,IAAc,CAAf,GAAoBL,IAAI,CAACK,EAAE,EAAH,CAA1C;AACA,SAAKsB,cAAL,GAAuB3B,IAAI,CAACK,EAAE,EAAH,CAAJ,IAAc,CAAf,GAAoBL,IAAI,CAACK,EAAE,EAAH,CAA9C;AACA,SAAKuB,YAAL,GAAqB5B,IAAI,CAACK,EAAE,EAAH,CAAJ,IAAc,CAAf,GAAoBL,IAAI,CAACK,EAAE,EAAH,CAA5C;AACD;;AAED;;AAEA8B,iBAAe,GAAG;AAChB;AACA,UAAMf,KAAK,GAAG,KAAKK,WAAL,CAAiBN,QAAjB,CAA0B,KAAKK,UAAL,EAA1B,CAAd;AACA;;AACA,UAAMxB,IAAI,GAAG,KAAKG,KAAlB;AACA;;AACA,QAAIE,EAAE,GAAGe,KAAK,CAACX,MAAf;AACA;;AACA,QAAIK,IAAI,GAAG,CAAX;AACA;;AACA,QAAIvB,SAAS,GAAG,CAAhB;AACA;;AACA,QAAI8C,SAAS,GAAG,CAAhB;AACA;;AACA,QAAI3C,OAAO,GAAG,CAAd;AACA;;AACA,QAAI4C,aAAa,GAAG,CAAC,CAArB;AACA;;AACA,QAAIC,WAAW,GAAG,CAAC,CAAnB;AACA;;AACA,QAAIC,GAAG,GAAG,CAAV;AACA;;AACA,QAAIC,SAAS,GAAG,CAAhB;AACA;;AACA,QAAIhC,MAAM,GAAG,CAAb;AACA;;AACA,QAAIF,MAAM,GAAG,CAAb;AACA;;AACA,QAAImC,MAAM,GAAG,CAAb;AACA;;AACA,QAAIC,KAAJ;AACA;;AACA,QAAIC,UAAJ;AAEA;;AACA,UAAMC,UAAU,GAAG,MAAM;AACvB;AACA,UAAIC,MAAM,GAAG,CAAb;AACA;;AACA,UAAIN,GAAG,GAAG,CAAV;;AAEA,SAAG;AACDA,WAAG,GAAGxC,IAAI,CAACK,EAAE,EAAH,CAAV;AACAyC,cAAM,GAAIA,MAAM,IAAI,CAAX,GAAiBN,GAAG,GAAG,IAAhC;AACD,OAHD,QAGS,CAACA,GAAG,GAAG,IAAP,MAAiB,CAH1B;;AAKA,aAAOM,MAAP;AACD,KAZD;;AAcA,QAAI,CAAC1B,KAAD,IAAUA,KAAK,CAACE,IAAN,KAAe,MAA7B,EAAqC;AACnC,YAAM,IAAIc,KAAJ,CAAU,0BAAV,CAAN;AACD;;AAEDtB,QAAI,GAAGM,KAAK,CAACX,MAAN,GAAeW,KAAK,CAACN,IAA5B;AACA,UAAMiC,UAAU,GAAG,EAAnB;AACA,UAAMC,UAAU,GAAG,EAAnB;;AAEA,WAAO3C,EAAE,GAAGS,IAAZ,EAAkB;AAChB;AACAvB,eAAS,GAAGsD,UAAU,EAAtB;AACAJ,eAAS,IAAIlD,SAAb,CAHgB,CAKhB;;AACAkB,YAAM,GAAGJ,EAAT,CANgB,CAQhB;;AACAqC,YAAM,GAAG1C,IAAI,CAACK,EAAE,EAAH,CAAb;AACAgC,eAAS,GAAIK,MAAM,IAAI,CAAX,GAAgB,GAA5B;AACAhD,aAAO,GAAGgD,MAAM,GAAG,GAAnB,CAXgB,CAahB;;AACA,UAAIL,SAAS,GAAG,CAAhB,EAAmB;AACjBA,iBAAS,GAAGC,aAAZ;AACA5C,eAAO,GAAG6C,WAAV;AACAG,cAAM,GAAIJ,aAAa,IAAI,CAAlB,GAAuBC,WAAhC;AACAlC,UAAE;AACFI,cAAM;AACP,OAND,MAMO;AACL6B,qBAAa,GAAGD,SAAhB;AACAE,mBAAW,GAAG7C,OAAd;AACD,OAvBe,CAyBhB;;;AACA,YAAMuD,KAAK,GAAG,UACZ,SADY,EACD;AACX,cAFY,EAGZ,gBAHY,EAIZ,eAJY,EAKZ,eALY,EAMZ,mBANY,EAOZ,WAPY,CAAd;;AAUA,cAAQZ,SAAR;AACE;AACA,aAAK,GAAL;AACA;;AACA,aAAK,GAAL;AACA;;AACA,aAAK,GAAL;AACA;;AACA,aAAK,GAAL;AACA;;AACA,aAAK,GAAL;AACA;;AACA,aAAK,GAAL;AACEM,eAAK,GAAG,IAAIlD,wDAAJ,CACNwD,KAAK,CAACZ,SAAD,CADC,EACY9C,SADZ,EACuBkD,SADvB,EAEN/C,OAFM,EAEGM,IAAI,CAACK,EAAE,EAAH,CAFP,EAEeL,IAAI,CAACK,EAAE,EAAH,CAFnB,CAAR;AAIA;;AACF,aAAK,GAAL;AACEsC,eAAK,GAAG,IAAIlD,wDAAJ,CACNwD,KAAK,CAACZ,SAAD,CADC,EACY9C,SADZ,EACuBkD,SADvB,EAEN/C,OAFM,EAEGM,IAAI,CAACK,EAAE,EAAH,CAFP,CAAR;AAIA;AACF;;AACA,aAAK,GAAL;AACE,kBAAQX,OAAR;AACE;AACA,iBAAK,GAAL;AACE8C,iBAAG,GAAGK,UAAU,EAAhB;;AACA,kBAAI7C,IAAI,CAACK,EAAE,GAAGmC,GAAL,GAAW,CAAZ,CAAJ,KAAuB,IAA3B,EAAiC;AAC/B,sBAAM,IAAIJ,KAAJ,CAAU,qBAAV,CAAN;AACD;;AACDO,mBAAK,GAAG,IAAI5C,gEAAJ,CACN,iBADM,EACaR,SADb,EACwBkD,SADxB,EAENzC,IAAI,CAACkD,QAAL,CAAc7C,EAAd,EAAkB,CAACA,EAAE,IAAImC,GAAP,IAAc,CAAhC,CAFM,CAAR;AAIA;;AACF,iBAAK,GAAL;AACEA,iBAAG,GAAGK,UAAU,EAAhB;AACAF,mBAAK,GAAG,IAAI5C,gEAAJ,CACN,qBADM,EACiBR,SADjB,EAC4BkD,SAD5B,EAENzC,IAAI,CAACkD,QAAL,CAAc7C,EAAd,EAAmBA,EAAE,IAAImC,GAAzB,CAFM,CAAR;AAIA;AACF;;AACA,iBAAK,GAAL;AACEH,uBAAS,GAAGrC,IAAI,CAACK,EAAE,EAAH,CAAhB;AACAmC,iBAAG,GAAGK,UAAU,EAAhB;;AACA,sBAAQR,SAAR;AACE,qBAAK,IAAL;AAAW;AACTM,uBAAK,GAAG,IAAI1C,qDAAJ,CACN,gBADM,EACYV,SADZ,EACuBkD,SADvB,EACkC,CAACzC,IAAI,CAACK,EAAE,EAAH,CAAL,EAAaL,IAAI,CAACK,EAAE,EAAH,CAAjB,CADlC,CAAR;AAGA;;AACF,qBAAK,IAAL;AAAW;AACTsC,uBAAK,GAAG,IAAI1C,qDAAJ,CACN,WADM,EACOV,SADP,EACkBkD,SADlB,EAC6B,CAACxB,MAAM,CAACC,YAAP,CAAoBiC,KAApB,CAA0B,IAA1B,EAAgCnD,IAAI,CAACkD,QAAL,CAAc7C,EAAd,EAAkBA,EAAE,IAAImC,GAAxB,CAAhC,CAAD,CAD7B,CAAR;AAGA;;AACF,qBAAK,IAAL;AAAW;AACTG,uBAAK,GAAG,IAAI1C,qDAAJ,CACN,iBADM,EACaV,SADb,EACwBkD,SADxB,EACmC,CAACxB,MAAM,CAACC,YAAP,CAAoBiC,KAApB,CAA0B,IAA1B,EAAgCnD,IAAI,CAACkD,QAAL,CAAc7C,EAAd,EAAkBA,EAAE,IAAImC,GAAxB,CAAhC,CAAD,CADnC,CAAR;AAGA;;AACF,qBAAK,IAAL;AAAW;AACTG,uBAAK,GAAG,IAAI1C,qDAAJ,CACN,mBADM,EACeV,SADf,EAC0BkD,SAD1B,EACqC,CAACxB,MAAM,CAACC,YAAP,CAAoBiC,KAApB,CAA0B,IAA1B,EAAgCnD,IAAI,CAACkD,QAAL,CAAc7C,EAAd,EAAkBA,EAAE,IAAImC,GAAxB,CAAhC,CAAD,CADrC,CAAR;AAGA;;AACF,qBAAK,IAAL;AAAW;AACTG,uBAAK,GAAG,IAAI1C,qDAAJ,CACN,gBADM,EACYV,SADZ,EACuBkD,SADvB,EACkC,CAACxB,MAAM,CAACC,YAAP,CAAoBiC,KAApB,CAA0B,IAA1B,EAAgCnD,IAAI,CAACkD,QAAL,CAAc7C,EAAd,EAAkBA,EAAE,IAAImC,GAAxB,CAAhC,CAAD,CADlC,CAAR;AAGA;;AACF,qBAAK,IAAL;AAAW;AACTG,uBAAK,GAAG,IAAI1C,qDAAJ,CACN,QADM,EACIV,SADJ,EACekD,SADf,EAC0B,CAACxB,MAAM,CAACC,YAAP,CAAoBiC,KAApB,CAA0B,IAA1B,EAAgCnD,IAAI,CAACkD,QAAL,CAAc7C,EAAd,EAAkBA,EAAE,IAAImC,GAAxB,CAAhC,CAAD,CAD1B,CAAR;AAGA;;AACF,qBAAK,IAAL;AAAW;AACTG,uBAAK,GAAG,IAAI1C,qDAAJ,CACN,QADM,EACIV,SADJ,EACekD,SADf,EAC0B,CAACxB,MAAM,CAACC,YAAP,CAAoBiC,KAApB,CAA0B,IAA1B,EAAgCnD,IAAI,CAACkD,QAAL,CAAc7C,EAAd,EAAkBA,EAAE,IAAImC,GAAxB,CAAhC,CAAD,CAD1B,CAAR;AAGA;;AACF,qBAAK,IAAL;AAAW;AACTG,uBAAK,GAAG,IAAI1C,qDAAJ,CACN,UADM,EACMV,SADN,EACiBkD,SADjB,EAC4B,CAACxB,MAAM,CAACC,YAAP,CAAoBiC,KAApB,CAA0B,IAA1B,EAAgCnD,IAAI,CAACkD,QAAL,CAAc7C,EAAd,EAAkBA,EAAE,IAAImC,GAAxB,CAAhC,CAAD,CAD5B,CAAR;AAGA;;AACF,qBAAK,IAAL;AAAW;AACTG,uBAAK,GAAG,IAAI1C,qDAAJ,CACN,mBADM,EACeV,SADf,EAC0BkD,SAD1B,EACqC,CAACzC,IAAI,CAACK,EAAE,EAAH,CAAL,CADrC,CAAR;AAGA;;AACF,qBAAK,IAAL;AAAW;AACTsC,uBAAK,GAAG,IAAI1C,qDAAJ,CACN,YADM,EACQV,SADR,EACmBkD,SADnB,EAC8B,EAD9B,CAAR;AAGA;;AACF,qBAAK,IAAL;AAAW;AACTE,uBAAK,GAAG,IAAI1C,qDAAJ,CACN,UADM,EACMV,SADN,EACiBkD,SADjB,EAC4B,CAAEzC,IAAI,CAACK,EAAE,EAAH,CAAJ,IAAc,EAAf,GAAsBL,IAAI,CAACK,EAAE,EAAH,CAAJ,IAAc,CAApC,GAAyCL,IAAI,CAACK,EAAE,EAAH,CAA9C,CAD5B,CAAR;AAGA;;AACF,qBAAK,IAAL;AAAW;AACTsC,uBAAK,GAAG,IAAI1C,qDAAJ,CACN,aADM,EACSV,SADT,EACoBkD,SADpB,EAC+B,CAACzC,IAAI,CAACK,EAAE,EAAH,CAAL,EAAaL,IAAI,CAACK,EAAE,EAAH,CAAjB,EAAyBL,IAAI,CAACK,EAAE,EAAH,CAA7B,EAAqCL,IAAI,CAACK,EAAE,EAAH,CAAzC,EAAiDL,IAAI,CAACK,EAAE,EAAH,CAArD,CAD/B,CAAR;AAGA;;AACF,qBAAK,IAAL;AAAW;AACTsC,uBAAK,GAAG,IAAI1C,qDAAJ,CACN,eADM,EACWV,SADX,EACsBkD,SADtB,EACiC,CAACzC,IAAI,CAACK,EAAE,EAAH,CAAL,EAAaL,IAAI,CAACK,EAAE,EAAH,CAAjB,EAAyBL,IAAI,CAACK,EAAE,EAAH,CAA7B,EAAqCL,IAAI,CAACK,EAAE,EAAH,CAAzC,CADjC,CAAR;AAGA;;AACF,qBAAK,IAAL;AAAW;AACTsC,uBAAK,GAAG,IAAI1C,qDAAJ,CACN,cADM,EACUV,SADV,EACqBkD,SADrB,EACgC,CAACzC,IAAI,CAACK,EAAE,EAAH,CAAL,EAAaL,IAAI,CAACK,EAAE,EAAH,CAAjB,CADhC,CAAR;AAGA;;AACF,qBAAK,IAAL;AAAW;AACTsC,uBAAK,GAAG,IAAI1C,qDAAJ,CACN,mBADM,EACeV,SADf,EAC0BkD,SAD1B,EACqC,CAACzC,IAAI,CAACkD,QAAL,CAAc7C,EAAd,EAAkBA,EAAE,IAAImC,GAAxB,CAAD,CADrC,CAAR;AAGA;;AACF;AAAS;AACPG,uBAAK,GAAG,IAAI1C,qDAAJ,CACN,SADM,EACKV,SADL,EACgBkD,SADhB,EAC2B,CAACJ,SAAD,EAAYrC,IAAI,CAACkD,QAAL,CAAc7C,EAAd,EAAkBA,EAAE,IAAImC,GAAxB,CAAZ,CAD3B,CAAR;AA7EJ;;AAiFA;;AACF;AACEY,qBAAO,CAACC,IAAR,CAAa,kBAAb,EAAiCX,MAAM,CAACY,QAAP,CAAgB,EAAhB,CAAjC;AA1GJ;;AA4GA;AACF;;AACA;AACE,gBAAM,IAAIlB,KAAJ,CAAU,gBAAV,CAAN;AAzIJ,OApCgB,CAgLhB;;;AACA7B,YAAM,GAAGF,EAAE,GAAGI,MAAd;AACAmC,gBAAU,GAAG5C,IAAI,CAACkD,QAAL,CAAczC,MAAd,EAAsBA,MAAM,GAAGF,MAA/B,CAAb;AACAqC,gBAAU,CAAC,CAAD,CAAV,GAAgBF,MAAhB;;AACA,UACEC,KAAK,YAAYlD,wDAAjB,IACAkD,KAAK,CAACrD,OAAN,KAAkB,QADlB;AAEA;AACCqD,WAAD,CAAQ7C,UAAR,KAAuB,CAJzB,EAKE;AACA6C,aAAK,CAACrD,OAAN,GAAgB2D,KAAK,CAAC,CAAD,CAArB;AACAL,kBAAU,GAAG,IAAIW,UAAJ,CAAe,CAAC,OAAOZ,KAAK,CAACjD,OAAd,EAAuBiD,KAAK,CAAC9C,UAA7B,EAAyC8C,KAAK,CAAC7C,UAA/C,CAAf,CAAb;AACD;;AACDkD,gBAAU,CAACjC,IAAX,CAAgB6B,UAAhB,EA7LgB,CA+LhB;;AACAG,gBAAU,CAAChC,IAAX,CAAgB4B,KAAhB;AACD;;AAED,SAAKd,MAAL,CAAYd,IAAZ,CAAiBgC,UAAjB;AACA,SAAKjB,WAAL,CAAiBf,IAAjB,CAAsBiC,UAAtB;AACD;;AA/UsB;AAgVxB,C","file":"smf.parser.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SMF\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SMF\"] = factory();\n\telse\n\t\troot[\"SMF\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/smf.js\");\n","// This file is auto-generated by the build system.\nconst Meta = {\n  version: '0.3.4',\n  date: '2020-01-13T02:21:55.338Z',\n};\nexport default Meta;\n","/**\n * Midi Event abstract Structure\n */\nclass Event {\n  /**\n   * @param {string} subtype event subtype name.\n   * @param {number} deltaTime delta time.\n   * @param {number} time time.\n   */\n  constructor(subtype, deltaTime, time) {\n    /** @type {string} */\n    this.subtype = subtype;\n    /** @type {number} */\n    this.deltaTime = deltaTime;\n    /** @type {number} */\n    this.time = time;\n  }\n}\n\n/**\n * Midi Channel Event Structure\n * @extends {Event}\n */\nclass ChannelEvent extends Event {\n  /**\n   * @param {string} subtype\n   * @param {number} deltaTime delta time.\n   * @param {number} time time.\n   * @param {number} channel\n   * @param {number=} optParameter1\n   * @param {number=} optParameter2\n   */\n  constructor(subtype, deltaTime, time, channel, optParameter1, optParameter2) {\n    super(subtype, deltaTime, time);\n    /** @type {number} */\n    this.channel = channel;\n    /** @type {(number|undefined)} */\n    this.parameter1 = optParameter1;\n    /** @type {(number|undefined)} */\n    this.parameter2 = optParameter2;\n  }\n}\n\n/**\n * System Exclusive Event Structure\n * @extends {Event}\n */\nclass SystemExclusiveEvent extends Event {\n  /**\n   * @param {string} subtype\n   * @param {number} deltaTime delta time.\n   * @param {number} time time.\n   * @param {ByteArray} data\n   */\n  constructor(subtype, deltaTime, time, data) {\n    super(subtype, deltaTime, time);\n    /** @type {ByteArray} */\n    this.data = data;\n  }\n}\n\n/**\n * Midi Meta Event Structure\n * @extends {Event}\n */\nclass MetaEvent extends Event {\n  /**\n   * @param {string} subtype\n   * @param {number} deltaTime delta time.\n   * @param {number} time time.\n   * @param {Array.<*>} data meta data.\n   */\n  constructor(subtype, deltaTime, time, data) {\n    super(subtype, deltaTime, time);\n    /** @type {Array.<*>} */\n    this.data = data;\n  };\n}\n\nexport {\n  ChannelEvent,\n  SystemExclusiveEvent,\n  MetaEvent,\n};\n","/**\n * Riff Parser class\n */\nexport default class Riff {\n  /**\n   * @param {ByteArray} input input buffer.\n   * @param {Object=} optParams option parameters.\n   */\n  constructor(input, optParams = {}) {\n    /** @type {ByteArray} */\n    this.input = input;\n    /** @type {number} */\n    this.ip = optParams.index || 0;\n    /** @type {number} */\n    this.length = optParams.length || input.length - this.ip;\n    /** @type {Array.<RiffChunk>} */\n    this.chunkList;\n    /** @type {number} */\n    this.offset = this.ip;\n    /** @type {boolean} */\n    this.padding =\n      optParams.padding !== void 0 ? optParams.padding : true;\n    /** @type {boolean} */\n    this.bigEndian =\n      optParams.bigEndian !== void 0 ? optParams.bigEndian : false;\n  }\n\n  /**\n   */\n  parse() {\n    /** @type {number} */\n    const length = this.length + this.offset;\n\n    this.chunkList = [];\n\n    while (this.ip < length) {\n      this.parseChunk();\n    }\n  }\n\n  /**\n   */\n  parseChunk() {\n    /** @type {ByteArray} */\n    const input = this.input;\n    /** @type {number} */\n    let ip = this.ip;\n    /** @type {number} */\n    let size;\n\n    this.chunkList.push(new RiffChunk(\n      String.fromCharCode(input[ip++], input[ip++], input[ip++], input[ip++]),\n      (size = this.bigEndian\n        ? ((input[ip++] << 24) | (input[ip++] << 16) |\n          (input[ip++] << 8) | (input[ip++])) >>> 0\n        : ((input[ip++]) | (input[ip++] << 8) |\n          (input[ip++] << 16) | (input[ip++] << 24)) >>> 0\n      ),\n      ip,\n    ));\n\n    ip += size;\n\n    // padding\n    if (this.padding && ((ip - this.offset) & 1) === 1) {\n      ip++;\n    }\n\n    this.ip = ip;\n  }\n\n  /**\n   * @param {number} index chunk index.\n   * @return {?RiffChunk}\n   */\n  getChunk(index) {\n    /** @type {RiffChunk} */\n    const chunk = this.chunkList[index];\n\n    if (chunk === void 0) {\n      return null;\n    }\n\n    return chunk;\n  }\n\n  /**\n   * @return {number}\n   */\n  getNumberOfChunks() {\n    return this.chunkList.length;\n  }\n}\n\n/**\n * Riff Chunk Structure\n * @interface\n */\nclass RiffChunk {\n  /**\n   * @param {string} type\n   * @param {number} size\n   * @param {number} offset\n   */\n  constructor(type, size, offset) {\n    /** @type {string} */\n    this.type = type;\n    /** @type {number} */\n    this.size = size;\n    /** @type {number} */\n    this.offset = offset;\n  }\n}\n","import {\n  ChannelEvent,\n  SystemExclusiveEvent,\n  MetaEvent,\n} from './midi_event';\nimport Meta from './meta';\nimport Riff from './riff';\n\n/**\n * Standard Midi File Parser class\n */\nexport default class SMF {\n  /**\n   * @param {ByteArray} input input buffer.\n   * @param {Object=} optParams option parameters.\n   */\n  constructor(input, optParams = {}) {\n    optParams.padding = false;\n    optParams.bigEndian = true;\n\n    /** @type {ByteArray} */\n    this.input = input;\n    /** @type {number} */\n    this.ip = optParams.index || 0;\n    /** @type {number} */\n    this.chunkIndex = 0;\n    /**\n     * @type {Riff}\n     * @private\n     */\n    this.riffParser_ = new Riff(input, optParams);\n\n    // MIDI File Information\n\n    /** @type {number} */\n    this.formatType = 0;\n    /** @type {number} */\n    this.numberOfTracks = 0;\n    /** @type {number} */\n    this.timeDivision = 0;\n    /** @type {Array.<Array.<Midi.Event>>} */\n    this.tracks = [];\n    /** @type {Array.<Array.<ByteArray>>} */\n    this.plainTracks = [];\n\n    /** @type {number} */\n    this.version = Meta.version;\n    /** @type {string} */\n    this.build = Meta.build;\n  };\n\n  /**\n   */\n  parse() {\n    /** @type {number} */\n    let i = 0;\n    /** @type {number} */\n    let il = 0;\n\n    // parse riff chunks\n    this.riffParser_.parse();\n\n    // parse header chunk\n    this.parseHeaderChunk();\n\n    // parse track chunks\n    for (i = 0, il = this.numberOfTracks; i < il; ++i) {\n      this.parseTrackChunk();\n    }\n  };\n\n  /**\n   */\n  parseHeaderChunk() {\n    /** @type {?{type: string, size: number, offset: number}} */\n    const chunk = this.riffParser_.getChunk(this.chunkIndex++);\n    /** @type {ByteArray} */\n    const data = this.input;\n    /** @type {number} */\n    let ip = chunk.offset;\n\n    if (!chunk || chunk.type !== 'MThd') {\n      throw new Error('invalid header signature');\n    }\n\n    this.formatType = (data[ip++] << 8) | data[ip++];\n    this.numberOfTracks = (data[ip++] << 8) | data[ip++];\n    this.timeDivision = (data[ip++] << 8) | data[ip++];\n  };\n\n  /**\n   */\n  parseTrackChunk() {\n    /** @type {?{type: string, size: number, offset: number}} */\n    const chunk = this.riffParser_.getChunk(this.chunkIndex++);\n    /** @type {ByteArray} */\n    const data = this.input;\n    /** @type {number} */\n    let ip = chunk.offset;\n    /** @type {number} */\n    let size = 0;\n    /** @type {number} */\n    let deltaTime = 0;\n    /** @type {number} */\n    let eventType = 0;\n    /** @type {number} */\n    let channel = 0;\n    /** @type {number} */\n    let prevEventType = -1;\n    /** @type {number} */\n    let prevChannel = -1;\n    /** @type {number} */\n    let tmp = 0;\n    /** @type {number} */\n    let totalTime = 0;\n    /** @type {number} */\n    let offset = 0;\n    /** @type {number} */\n    let length = 0;\n    /** @type {number} */\n    let status = 0;\n    /** @type {Event} */\n    let event;\n    /** @type {ByteArray} */\n    let plainBytes;\n\n    /** @return {number} */\n    const readNumber = () => {\n      /** @type {number} */\n      let result = 0;\n      /** @type {number} */\n      let tmp = 0;\n\n      do {\n        tmp = data[ip++];\n        result = (result << 7) | (tmp & 0x7f);\n      } while ((tmp & 0x80) !== 0);\n\n      return result;\n    };\n\n    if (!chunk || chunk.type !== 'MTrk') {\n      throw new Error('invalid header signature');\n    }\n\n    size = chunk.offset + chunk.size;\n    const eventQueue = [];\n    const plainQueue = [];\n\n    while (ip < size) {\n      // delta time\n      deltaTime = readNumber();\n      totalTime += deltaTime;\n\n      // offset\n      offset = ip;\n\n      // event type value, midi channel\n      status = data[ip++];\n      eventType = (status >> 4) & 0xf;\n      channel = status & 0xf;\n\n      // run status rule\n      if (eventType < 8) {\n        eventType = prevEventType;\n        channel = prevChannel;\n        status = (prevEventType << 4) | prevChannel;\n        ip--;\n        offset--;\n      } else {\n        prevEventType = eventType;\n        prevChannel = channel;\n      }\n\n      // TODO\n      const table = [, , , , , , , ,\n        'NoteOff', // 0x8\n        'NoteOn',\n        'NoteAftertouch',\n        'ControlChange',\n        'ProgramChange',\n        'ChannelAftertouch',\n        'PitchBend',\n      ];\n\n      switch (eventType) {\n        // channel events\n        case 0x8:\n        /* FALLTHROUGH */\n        case 0x9:\n        /* FALLTHROUGH */\n        case 0xA:\n        /* FALLTHROUGH */\n        case 0xB:\n        /* FALLTHROUGH */\n        case 0xD:\n        /* FALLTHROUGH */\n        case 0xE:\n          event = new ChannelEvent(\n            table[eventType], deltaTime, totalTime,\n            channel, data[ip++], data[ip++],\n          );\n          break;\n        case 0xC:\n          event = new ChannelEvent(\n            table[eventType], deltaTime, totalTime,\n            channel, data[ip++],\n          );\n          break;\n        // meta events, system exclusive event\n        case 0xF:\n          switch (channel) {\n            // SysEx event\n            case 0x0:\n              tmp = readNumber();\n              if (data[ip + tmp - 1] !== 0xf7) {\n                throw new Error('invalid SysEx event');\n              }\n              event = new SystemExclusiveEvent(\n                'SystemExclusive', deltaTime, totalTime,\n                data.subarray(ip, (ip += tmp) - 1),\n              );\n              break;\n            case 0x7:\n              tmp = readNumber();\n              event = new SystemExclusiveEvent(\n                'SystemExclusive(F7)', deltaTime, totalTime,\n                data.subarray(ip, (ip += tmp)),\n              );\n              break;\n            // meta event\n            case 0xF:\n              eventType = data[ip++];\n              tmp = readNumber();\n              switch (eventType) {\n                case 0x00: // sequence number\n                  event = new MetaEvent(\n                    'SequenceNumber', deltaTime, totalTime, [data[ip++], data[ip++]],\n                  );\n                  break;\n                case 0x01: // text event\n                  event = new MetaEvent(\n                    'TextEvent', deltaTime, totalTime, [String.fromCharCode.apply(null, data.subarray(ip, ip += tmp))],\n                  );\n                  break;\n                case 0x02: // copyright notice\n                  event = new MetaEvent(\n                    'CopyrightNotice', deltaTime, totalTime, [String.fromCharCode.apply(null, data.subarray(ip, ip += tmp))],\n                  );\n                  break;\n                case 0x03: // sequence/track name\n                  event = new MetaEvent(\n                    'SequenceTrackName', deltaTime, totalTime, [String.fromCharCode.apply(null, data.subarray(ip, ip += tmp))],\n                  );\n                  break;\n                case 0x04: // instrument name\n                  event = new MetaEvent(\n                    'InstrumentName', deltaTime, totalTime, [String.fromCharCode.apply(null, data.subarray(ip, ip += tmp))],\n                  );\n                  break;\n                case 0x05: // lyrics\n                  event = new MetaEvent(\n                    'Lyrics', deltaTime, totalTime, [String.fromCharCode.apply(null, data.subarray(ip, ip += tmp))],\n                  );\n                  break;\n                case 0x06: // marker\n                  event = new MetaEvent(\n                    'Marker', deltaTime, totalTime, [String.fromCharCode.apply(null, data.subarray(ip, ip += tmp))],\n                  );\n                  break;\n                case 0x07: // cue point\n                  event = new MetaEvent(\n                    'CuePoint', deltaTime, totalTime, [String.fromCharCode.apply(null, data.subarray(ip, ip += tmp))],\n                  );\n                  break;\n                case 0x20: // midi channel prefix\n                  event = new MetaEvent(\n                    'MidiChannelPrefix', deltaTime, totalTime, [data[ip++]],\n                  );\n                  break;\n                case 0x2f: // end of track\n                  event = new MetaEvent(\n                    'EndOfTrack', deltaTime, totalTime, [],\n                  );\n                  break;\n                case 0x51: // set tempo\n                  event = new MetaEvent(\n                    'SetTempo', deltaTime, totalTime, [(data[ip++] << 16) | (data[ip++] << 8) | data[ip++]],\n                  );\n                  break;\n                case 0x54: // smpte offset\n                  event = new MetaEvent(\n                    'SmpteOffset', deltaTime, totalTime, [data[ip++], data[ip++], data[ip++], data[ip++], data[ip++]],\n                  );\n                  break;\n                case 0x58: // time signature\n                  event = new MetaEvent(\n                    'TimeSignature', deltaTime, totalTime, [data[ip++], data[ip++], data[ip++], data[ip++]],\n                  );\n                  break;\n                case 0x59: // key signature\n                  event = new MetaEvent(\n                    'KeySignature', deltaTime, totalTime, [data[ip++], data[ip++]],\n                  );\n                  break;\n                case 0x7f: // sequencer specific\n                  event = new MetaEvent(\n                    'SequencerSpecific', deltaTime, totalTime, [data.subarray(ip, ip += tmp)],\n                  );\n                  break;\n                default: // unknown\n                  event = new MetaEvent(\n                    'Unknown', deltaTime, totalTime, [eventType, data.subarray(ip, ip += tmp)],\n                  );\n              }\n              break;\n            default:\n              console.warn('unknown message:', status.toString(16));\n          }\n          break;\n        // error\n        default:\n          throw new Error('invalid status');\n      }\n\n      // plain queue\n      length = ip - offset;\n      plainBytes = data.subarray(offset, offset + length);\n      plainBytes[0] = status;\n      if (\n        event instanceof ChannelEvent &&\n        event.subtype === 'NoteOn' &&\n        /** @type {ChannelEvent} */\n        (event).parameter2 === 0\n      ) {\n        event.subtype = table[8];\n        plainBytes = new Uint8Array([0x80 | event.channel, event.parameter1, event.parameter2]);\n      }\n      plainQueue.push(plainBytes);\n\n      // event queue\n      eventQueue.push(event);\n    }\n\n    this.tracks.push(eventQueue);\n    this.plainTracks.push(plainQueue);\n  };\n};\n"],"sourceRoot":""}