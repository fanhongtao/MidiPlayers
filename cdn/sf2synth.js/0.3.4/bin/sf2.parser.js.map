{"version":3,"sources":["webpack://SoundFont/webpack/universalModuleDefinition","webpack://SoundFont/webpack/bootstrap","webpack://SoundFont/./src/riff.js","webpack://SoundFont/./src/sf2.js"],"names":["Riff","constructor","input","optParams","ip","index","length","chunkList","offset","padding","bigEndian","parse","parseChunk","size","push","RiffChunk","String","fromCharCode","getChunk","chunk","getNumberOfChunks","type","Parser","parserOption","sampleRate","presetHeader","presetZone","presetZoneModulator","presetZoneGenerator","instrument","instrumentZone","instrumentZoneModulator","instrumentZoneGenerator","sampleHeader","GeneratorEnumeratorTable","parser","Error","parseRiffChunk","data","signature","parseInfoList","parseSdtaList","parsePdtaList","samplingData","parsePhdr","parsePbag","parsePmod","parsePgen","parseInst","parseIbag","parseImod","parseIgen","parseShdr","presetName","apply","subarray","preset","bank","presetBagIndex","library","genre","morphology","presetGeneratorIndex","presetModulatorIndex","parseModulator","parseGenerator","instrumentName","instrumentBagIndex","instrumentGeneratorIndex","instrumentModulatorIndex","samples","sample","sampleName","start","end","startLoop","endLoop","originalPitch","pitchCorrection","sampleLink","sampleType","Int16Array","Uint8Array","buffer","adjust","adjustSampleData","multiply","newSample","i","il","j","code","key","output","value","amount","lo","hi","createInstrument","zone","bagIndex","bagIndexEnd","zoneInfo","instrumentGenerator","instrumentModulator","jl","createInstrumentGenerator_","createInstrumentModulator_","generator","generatorSequence","generatorInfo","modulator","modulatorSequence","modulatorInfo","name","info","createPreset","presetGenerator","presetModulator","createPresetGenerator_","createPresetModulator_","header","modgen","createBagModGen_","modgenInfo","indexStart","indexEnd","zoneModGen","unknown"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;;;;AAIe,MAAMA,IAAN,CAAW;AACxB;;;;AAIAC,aAAW,CAACC,KAAD,EAAQC,SAAS,GAAG,EAApB,EAAwB;AACjC;AACA,SAAKD,KAAL,GAAaA,KAAb;AACA;;AACA,SAAKE,EAAL,GAAUD,SAAS,CAACE,KAAV,IAAmB,CAA7B;AACA;;AACA,SAAKC,MAAL,GAAcH,SAAS,CAACG,MAAV,IAAoBJ,KAAK,CAACI,MAAN,GAAe,KAAKF,EAAtD;AACA;;AACA,SAAKG,SAAL;AACA;;AACA,SAAKC,MAAL,GAAc,KAAKJ,EAAnB;AACA;;AACA,SAAKK,OAAL,GACEN,SAAS,CAACM,OAAV,KAAsB,KAAK,CAA3B,GAA+BN,SAAS,CAACM,OAAzC,GAAmD,IADrD;AAEA;;AACA,SAAKC,SAAL,GACEP,SAAS,CAACO,SAAV,KAAwB,KAAK,CAA7B,GAAiCP,SAAS,CAACO,SAA3C,GAAuD,KADzD;AAED;AAED;;;;AAEAC,OAAK,GAAG;AACN;AACA,UAAML,MAAM,GAAG,KAAKA,MAAL,GAAc,KAAKE,MAAlC;AAEA,SAAKD,SAAL,GAAiB,EAAjB;;AAEA,WAAO,KAAKH,EAAL,GAAUE,MAAjB,EAAyB;AACvB,WAAKM,UAAL;AACD;AACF;AAED;;;;AAEAA,YAAU,GAAG;AACX;AACA,UAAMV,KAAK,GAAG,KAAKA,KAAnB;AACA;;AACA,QAAIE,EAAE,GAAG,KAAKA,EAAd;AACA;;AACA,QAAIS,IAAJ;AAEA,SAAKN,SAAL,CAAeO,IAAf,CAAoB,IAAIC,SAAJ,CAClBC,MAAM,CAACC,YAAP,CAAoBf,KAAK,CAACE,EAAE,EAAH,CAAzB,EAAiCF,KAAK,CAACE,EAAE,EAAH,CAAtC,EAA8CF,KAAK,CAACE,EAAE,EAAH,CAAnD,EAA2DF,KAAK,CAACE,EAAE,EAAH,CAAhE,CADkB,EAEjBS,IAAI,GAAG,KAAKH,SAAL,GACN,CAAER,KAAK,CAACE,EAAE,EAAH,CAAL,IAAe,EAAhB,GAAuBF,KAAK,CAACE,EAAE,EAAH,CAAL,IAAe,EAAtC,GACEF,KAAK,CAACE,EAAE,EAAH,CAAL,IAAe,CADjB,GACuBF,KAAK,CAACE,EAAE,EAAH,CAD7B,MAC0C,CAFpC,GAGN,CAAEF,KAAK,CAACE,EAAE,EAAH,CAAN,GAAiBF,KAAK,CAACE,EAAE,EAAH,CAAL,IAAe,CAAhC,GACEF,KAAK,CAACE,EAAE,EAAH,CAAL,IAAe,EADjB,GACwBF,KAAK,CAACE,EAAE,EAAH,CAAL,IAAe,EADxC,MACiD,CANjC,EAQlBA,EARkB,CAApB;AAWAA,MAAE,IAAIS,IAAN,CAnBW,CAqBX;;AACA,QAAI,KAAKJ,OAAL,IAAgB,CAAEL,EAAE,GAAG,KAAKI,MAAX,GAAqB,CAAtB,MAA6B,CAAjD,EAAoD;AAClDJ,QAAE;AACH;;AAED,SAAKA,EAAL,GAAUA,EAAV;AACD;AAED;;;;;;AAIAc,UAAQ,CAACb,KAAD,EAAQ;AACd;AACA,UAAMc,KAAK,GAAG,KAAKZ,SAAL,CAAeF,KAAf,CAAd;;AAEA,QAAIc,KAAK,KAAK,KAAK,CAAnB,EAAsB;AACpB,aAAO,IAAP;AACD;;AAED,WAAOA,KAAP;AACD;AAED;;;;;AAGAC,mBAAiB,GAAG;AAClB,WAAO,KAAKb,SAAL,CAAeD,MAAtB;AACD;;AAxFuB;AA2F1B;;;;;AAIA,MAAMS,SAAN,CAAgB;AACd;;;;;AAKAd,aAAW,CAACoB,IAAD,EAAOR,IAAP,EAAaL,MAAb,EAAqB;AAC9B;AACA,SAAKa,IAAL,GAAYA,IAAZ;AACA;;AACA,SAAKR,IAAL,GAAYA,IAAZ;AACA;;AACA,SAAKL,MAAL,GAAcA,MAAd;AACD;;AAba,C;;;;;;;;;;;;ACnGhB;AAAA;AAAA;AAAA;AAEA;;;;AAGO,MAAMc,MAAN,CAAa;AAClB;;;;AAIArB,aAAW,CAACC,KAAD,EAAQC,SAAS,GAAG,EAApB,EAAwB;AACjC;AACA,SAAKD,KAAL,GAAaA,KAAb;AACA;;AACA,SAAKqB,YAAL,GAAoBpB,SAAS,CAACoB,YAAV,IAA0B,EAA9C;AACA;;AACA,SAAKC,UAAL,GAAkBrB,SAAS,CAACqB,UAAV,IAAwB,KAA1C,CANiC,CAMgB;;AAEjD;;AACA,SAAKC,YAAL;AACA;;AACA,SAAKC,UAAL;AACA;;AACA,SAAKC,mBAAL;AACA;;AACA,SAAKC,mBAAL;AACA;;AACA,SAAKC,UAAL;AACA;;AACA,SAAKC,cAAL;AACA;;AACA,SAAKC,uBAAL;AACA;;AACA,SAAKC,uBAAL;AACA;;AACA,SAAKC,YAAL;AAEA;;;;;AAIA,SAAKC,wBAAL,GAAgC,CAC9B,kBAD8B,EAE9B,gBAF8B,EAG9B,sBAH8B,EAI9B,oBAJ8B,EAK9B,wBAL8B,EAM9B,eAN8B,EAO9B,eAP8B,EAQ9B,eAR8B,EAS9B,iBAT8B,EAU9B,gBAV8B,EAW9B,kBAX8B,EAY9B,kBAZ8B,EAa9B,sBAb8B,EAc9B,gBAd8B,GAcV;AACpB,uBAf8B,EAgB9B,mBAhB8B,EAiB9B,KAjB8B,KAiBjB;AACb,iBAlB8B,EAmB9B,YAnB8B,EAoB9B,aApB8B,EAqB9B,YArB8B,EAsB9B,aAtB8B,EAuB9B,cAvB8B,EAwB9B,YAxB8B,EAyB9B,aAzB8B,EA0B9B,eA1B8B,EA2B9B,eA3B8B,EA4B9B,oBA5B8B,EA6B9B,qBA7B8B,EA8B9B,aA9B8B,EA+B9B,cA/B8B,EAgC9B,YAhC8B,EAiC9B,aAjC8B,EAkC9B,eAlC8B,EAmC9B,eAnC8B,EAoC9B,oBApC8B,EAqC9B,qBArC8B,EAsC9B,YAtC8B,GAsCd;AAChB,cAvC8B,EAwC9B,UAxC8B,EAyC9B,4BAzC8B,EA0C9B,QA1C8B,EA2C9B,UA3C8B,EA4C9B,oBA5C8B,GA4CN;AACxB,8BA7C8B,EA8C9B,YA9C8B,EA+C9B,UA/C8B,EAgD9B,UAhD8B,EAiD9B,aAjD8B,GAiDb;AACjB,iBAlD8B,EAmD9B,gBAnD8B,EAoD9B,mBApD8B,EAoDT;AACrB,aArD8B,CAAhC;AAuDD;AAED;;;AACAvB,OAAK,GAAG;AACN;AACA,UAAMwB,MAAM,GAAG,IAAInC,gDAAJ,CAAS,KAAKE,KAAd,EAAqB,KAAKqB,YAA1B,CAAf,CAFM,CAIN;;AACAY,UAAM,CAACxB,KAAP;;AACA,QAAIwB,MAAM,CAAC5B,SAAP,CAAiBD,MAAjB,KAA4B,CAAhC,EAAmC;AACjC,YAAM,IAAI8B,KAAJ,CAAU,oBAAV,CAAN;AACD;AAED;;;AACA,UAAMjB,KAAK,GAAGgB,MAAM,CAACjB,QAAP,CAAgB,CAAhB,CAAd;;AACA,QAAIC,KAAK,KAAK,IAAd,EAAoB;AAClB,YAAM,IAAIiB,KAAJ,CAAU,iBAAV,CAAN;AACD;;AAED,SAAKC,cAAL,CAAoBlB,KAApB,EAhBM,CAiBN;;AACA,SAAKjB,KAAL,GAAa,IAAb;AACD;AAED;;;;;AAGAmC,gBAAc,CAAClB,KAAD,EAAQ;AACpB;AACA,UAAMmB,IAAI,GAAG,KAAKpC,KAAlB;AACA;;AACA,QAAIE,EAAE,GAAGe,KAAK,CAACX,MAAf,CAJoB,CAMpB;;AACA,QAAIW,KAAK,CAACE,IAAN,KAAe,MAAnB,EAA2B;AACzB,YAAM,IAAIe,KAAJ,CAAU,wBAAwBjB,KAAK,CAACE,IAAxC,CAAN;AACD,KATmB,CAWpB;;AACA;;;AACA,UAAMkB,SAAS,GAAGvB,MAAM,CAACC,YAAP,CAAoBqB,IAAI,CAAClC,EAAE,EAAH,CAAxB,EAAgCkC,IAAI,CAAClC,EAAE,EAAH,CAApC,EAA4CkC,IAAI,CAAClC,EAAE,EAAH,CAAhD,EAAwDkC,IAAI,CAAClC,EAAE,EAAH,CAA5D,CAAlB;;AACA,QAAImC,SAAS,KAAK,MAAlB,EAA0B;AACxB,YAAM,IAAIH,KAAJ,CAAU,uBAAuBG,SAAjC,CAAN;AACD,KAhBmB,CAkBpB;;AACA;;;AACA,UAAMJ,MAAM,GAAG,IAAInC,gDAAJ,CAASsC,IAAT,EAAe;AAAE,eAASlC,EAAX;AAAe,gBAAUe,KAAK,CAACN,IAAN,GAAa;AAAtC,KAAf,CAAf;AACAsB,UAAM,CAACxB,KAAP;;AACA,QAAIwB,MAAM,CAACf,iBAAP,OAA+B,CAAnC,EAAsC;AACpC,YAAM,IAAIgB,KAAJ,CAAU,wBAAV,CAAN;AACD,KAxBmB,CA0BpB;;;AACA,SAAKI,aAAL;AAAoB;AAA0BL,UAAM,CAACjB,QAAP,CAAgB,CAAhB,CAA9C,EA3BoB,CA6BpB;;AACA,SAAKuB,aAAL;AAAoB;AAA0BN,UAAM,CAACjB,QAAP,CAAgB,CAAhB,CAA9C,EA9BoB,CAgCpB;;AACA,SAAKwB,aAAL;AAAoB;AAA0BP,UAAM,CAACjB,QAAP,CAAgB,CAAhB,CAA9C;AACD;;AAED;;;AAGAsB,eAAa,CAACrB,KAAD,EAAQ;AACnB;AACA,UAAMmB,IAAI,GAAG,KAAKpC,KAAlB;AACA;;AACA,QAAIE,EAAE,GAAGe,KAAK,CAACX,MAAf,CAJmB,CAMnB;;AACA,QAAIW,KAAK,CAACE,IAAN,KAAe,MAAnB,EAA2B;AACzB,YAAM,IAAIe,KAAJ,CAAU,wBAAwBjB,KAAK,CAACE,IAAxC,CAAN;AACD,KATkB,CAWnB;;AACA;;;AACA,UAAMkB,SAAS,GAAGvB,MAAM,CAACC,YAAP,CAAoBqB,IAAI,CAAClC,EAAE,EAAH,CAAxB,EAAgCkC,IAAI,CAAClC,EAAE,EAAH,CAApC,EAA4CkC,IAAI,CAAClC,EAAE,EAAH,CAAhD,EAAwDkC,IAAI,CAAClC,EAAE,EAAH,CAA5D,CAAlB;;AACA,QAAImC,SAAS,KAAK,MAAlB,EAA0B;AACxB,YAAM,IAAIH,KAAJ,CAAU,uBAAuBG,SAAjC,CAAN;AACD,KAhBkB,CAkBnB;;AACA;;;AACA,UAAMJ,MAAM,GAAG,IAAInC,gDAAJ,CAASsC,IAAT,EAAe;AAAE,eAASlC,EAAX;AAAe,gBAAUe,KAAK,CAACN,IAAN,GAAa;AAAtC,KAAf,CAAf;AACAsB,UAAM,CAACxB,KAAP;AACD;;AAED;;;AAGA8B,eAAa,CAACtB,KAAD,EAAQ;AACnB;AACA,UAAMmB,IAAI,GAAG,KAAKpC,KAAlB;AACA;;AACA,QAAIE,EAAE,GAAGe,KAAK,CAACX,MAAf,CAJmB,CAMnB;;AACA,QAAIW,KAAK,CAACE,IAAN,KAAe,MAAnB,EAA2B;AACzB,YAAM,IAAIe,KAAJ,CAAU,wBAAwBjB,KAAK,CAACE,IAAxC,CAAN;AACD,KATkB,CAWnB;;AACA;;;AACA,UAAMkB,SAAS,GAAGvB,MAAM,CAACC,YAAP,CAAoBqB,IAAI,CAAClC,EAAE,EAAH,CAAxB,EAAgCkC,IAAI,CAAClC,EAAE,EAAH,CAApC,EAA4CkC,IAAI,CAAClC,EAAE,EAAH,CAAhD,EAAwDkC,IAAI,CAAClC,EAAE,EAAH,CAA5D,CAAlB;;AACA,QAAImC,SAAS,KAAK,MAAlB,EAA0B;AACxB,YAAM,IAAIH,KAAJ,CAAU,uBAAuBG,SAAjC,CAAN;AACD,KAhBkB,CAkBnB;;AACA;;;AACA,UAAMJ,MAAM,GAAG,IAAInC,gDAAJ,CAASsC,IAAT,EAAe;AAAE,eAASlC,EAAX;AAAe,gBAAUe,KAAK,CAACN,IAAN,GAAa;AAAtC,KAAf,CAAf;AACAsB,UAAM,CAACxB,KAAP;;AACA,QAAIwB,MAAM,CAAC5B,SAAP,CAAiBD,MAAjB,KAA4B,CAAhC,EAAmC;AACjC,YAAM,IAAI8B,KAAJ,CAAU,MAAV,CAAN;AACD;;AACD,SAAKO,YAAL;AACE;AACCR,UAAM,CAACjB,QAAP,CAAgB,CAAhB,CAFH;AAGD;;AAED;;;AAGAwB,eAAa,CAACvB,KAAD,EAAQ;AACnB;AACA,UAAMmB,IAAI,GAAG,KAAKpC,KAAlB;AACA;;AACA,QAAIE,EAAE,GAAGe,KAAK,CAACX,MAAf,CAJmB,CAMnB;;AACA,QAAIW,KAAK,CAACE,IAAN,KAAe,MAAnB,EAA2B;AACzB,YAAM,IAAIe,KAAJ,CAAU,wBAAwBjB,KAAK,CAACE,IAAxC,CAAN;AACD,KATkB,CAWnB;;AACA;;;AACA,UAAMkB,SAAS,GAAGvB,MAAM,CAACC,YAAP,CAAoBqB,IAAI,CAAClC,EAAE,EAAH,CAAxB,EAAgCkC,IAAI,CAAClC,EAAE,EAAH,CAApC,EAA4CkC,IAAI,CAAClC,EAAE,EAAH,CAAhD,EAAwDkC,IAAI,CAAClC,EAAE,EAAH,CAA5D,CAAlB;;AACA,QAAImC,SAAS,KAAK,MAAlB,EAA0B;AACxB,YAAM,IAAIH,KAAJ,CAAU,uBAAuBG,SAAjC,CAAN;AACD,KAhBkB,CAkBnB;;AACA;;;AACA,UAAMJ,MAAM,GAAG,IAAInC,gDAAJ,CAASsC,IAAT,EAAe;AAAE,eAASlC,EAAX;AAAe,gBAAUe,KAAK,CAACN,IAAN,GAAa;AAAtC,KAAf,CAAf;AACAsB,UAAM,CAACxB,KAAP,GArBmB,CAuBnB;;AACA,QAAIwB,MAAM,CAACf,iBAAP,OAA+B,CAAnC,EAAsC;AACpC,YAAM,IAAIgB,KAAJ,CAAU,oBAAV,CAAN;AACD;;AAED,SAAKQ,SAAL;AAAgB;AAAyBT,UAAM,CAACjB,QAAP,CAAgB,CAAhB,CAAzC;AACA,SAAK2B,SAAL;AAAgB;AAAyBV,UAAM,CAACjB,QAAP,CAAgB,CAAhB,CAAzC;AACA,SAAK4B,SAAL;AAAgB;AAAyBX,UAAM,CAACjB,QAAP,CAAgB,CAAhB,CAAzC;AACA,SAAK6B,SAAL;AAAgB;AAAyBZ,UAAM,CAACjB,QAAP,CAAgB,CAAhB,CAAzC;AACA,SAAK8B,SAAL;AAAgB;AAAyBb,UAAM,CAACjB,QAAP,CAAgB,CAAhB,CAAzC;AACA,SAAK+B,SAAL;AAAgB;AAAyBd,UAAM,CAACjB,QAAP,CAAgB,CAAhB,CAAzC;AACA,SAAKgC,SAAL;AAAgB;AAAyBf,UAAM,CAACjB,QAAP,CAAgB,CAAhB,CAAzC;AACA,SAAKiC,SAAL;AAAgB;AAAyBhB,UAAM,CAACjB,QAAP,CAAgB,CAAhB,CAAzC;AACA,SAAKkC,SAAL;AAAgB;AAAyBjB,UAAM,CAACjB,QAAP,CAAgB,CAAhB,CAAzC;AACD;;AAED;;;AAGA0B,WAAS,CAACzB,KAAD,EAAQ;AACf;AACA,UAAMmB,IAAI,GAAG,KAAKpC,KAAlB;AACA;;AACA,QAAIE,EAAE,GAAGe,KAAK,CAACX,MAAf;AACA;;AACA,UAAMiB,YAAY,GAAG,KAAKA,YAAL,GAAoB,EAAzC;AACA;;AACA,UAAMZ,IAAI,GAAGM,KAAK,CAACX,MAAN,GAAeW,KAAK,CAACN,IAAlC,CARe,CAUf;;AACA,QAAIM,KAAK,CAACE,IAAN,KAAe,MAAnB,EAA2B;AACzB,YAAM,IAAIe,KAAJ,CAAU,wBAAwBjB,KAAK,CAACE,IAAxC,CAAN;AACD;;AAED,WAAOjB,EAAE,GAAGS,IAAZ,EAAkB;AAChBY,kBAAY,CAACX,IAAb,CAAkB;AAChBuC,kBAAU,EAAErC,MAAM,CAACC,YAAP,CAAoBqC,KAApB,CAA0B,IAA1B,EAAgChB,IAAI,CAACiB,QAAL,CAAcnD,EAAd,EAAkBA,EAAE,IAAI,EAAxB,CAAhC,CADI;AAEhBoD,cAAM,EAAElB,IAAI,CAAClC,EAAE,EAAH,CAAJ,GAAckC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAFpB;AAGhBqD,YAAI,EAAEnB,IAAI,CAAClC,EAAE,EAAH,CAAJ,GAAckC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAHlB;AAIhBsD,sBAAc,EAAEpB,IAAI,CAAClC,EAAE,EAAH,CAAJ,GAAckC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAJ5B;AAKhBuD,eAAO,EAAE,CAACrB,IAAI,CAAClC,EAAE,EAAH,CAAJ,GAAckC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAA5B,GAAkCkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,EAAhD,GAAuDkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,EAAtE,MAA+E,CALxE;AAMhBwD,aAAK,EAAE,CAACtB,IAAI,CAAClC,EAAE,EAAH,CAAJ,GAAckC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAA5B,GAAkCkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,EAAhD,GAAuDkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,EAAtE,MAA+E,CANtE;AAOhByD,kBAAU,EAAE,CAACvB,IAAI,CAAClC,EAAE,EAAH,CAAJ,GAAckC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAA5B,GAAkCkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,EAAhD,GAAuDkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,EAAtE,MAA+E;AAP3E,OAAlB;AASD;AACF;;AAED;;;AAGAyC,WAAS,CAAC1B,KAAD,EAAQ;AACf;AACA,UAAMmB,IAAI,GAAG,KAAKpC,KAAlB;AACA;;AACA,QAAIE,EAAE,GAAGe,KAAK,CAACX,MAAf;AACA;;AACA,UAAMkB,UAAU,GAAG,KAAKA,UAAL,GAAkB,EAArC;AACA;;AACA,UAAMb,IAAI,GAAGM,KAAK,CAACX,MAAN,GAAeW,KAAK,CAACN,IAAlC,CARe,CAUf;;AACA,QAAIM,KAAK,CAACE,IAAN,KAAe,MAAnB,EAA2B;AACzB,YAAM,IAAIe,KAAJ,CAAU,wBAAwBjB,KAAK,CAACE,IAAxC,CAAN;AACD;;AAED,WAAOjB,EAAE,GAAGS,IAAZ,EAAkB;AAChBa,gBAAU,CAACZ,IAAX,CAAgB;AACdgD,4BAAoB,EAAExB,IAAI,CAAClC,EAAE,EAAH,CAAJ,GAAckC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CADpC;AAEd2D,4BAAoB,EAAEzB,IAAI,CAAClC,EAAE,EAAH,CAAJ,GAAckC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc;AAFpC,OAAhB;AAID;AACF;;AAED;;;AAGA0C,WAAS,CAAC3B,KAAD,EAAQ;AACf;AACA,QAAIA,KAAK,CAACE,IAAN,KAAe,MAAnB,EAA2B;AACzB,YAAM,IAAIe,KAAJ,CAAU,wBAAwBjB,KAAK,CAACE,IAAxC,CAAN;AACD;;AAED,SAAKM,mBAAL,GAA2B,KAAKqC,cAAL,CAAoB7C,KAApB,CAA3B;AACD;;AAED;;;AAGA4B,WAAS,CAAC5B,KAAD,EAAQ;AACf;AACA,QAAIA,KAAK,CAACE,IAAN,KAAe,MAAnB,EAA2B;AACzB,YAAM,IAAIe,KAAJ,CAAU,wBAAwBjB,KAAK,CAACE,IAAxC,CAAN;AACD;;AACD,SAAKO,mBAAL,GAA2B,KAAKqC,cAAL,CAAoB9C,KAApB,CAA3B;AACD;;AAED;;;AAGA6B,WAAS,CAAC7B,KAAD,EAAQ;AACf;AACA,UAAMmB,IAAI,GAAG,KAAKpC,KAAlB;AACA;;AACA,QAAIE,EAAE,GAAGe,KAAK,CAACX,MAAf;AACA;;AACA,UAAMqB,UAAU,GAAG,KAAKA,UAAL,GAAkB,EAArC;AACA;;AACA,UAAMhB,IAAI,GAAGM,KAAK,CAACX,MAAN,GAAeW,KAAK,CAACN,IAAlC,CARe,CAUf;;AACA,QAAIM,KAAK,CAACE,IAAN,KAAe,MAAnB,EAA2B;AACzB,YAAM,IAAIe,KAAJ,CAAU,wBAAwBjB,KAAK,CAACE,IAAxC,CAAN;AACD;;AAED,WAAOjB,EAAE,GAAGS,IAAZ,EAAkB;AAChBgB,gBAAU,CAACf,IAAX,CAAgB;AACdoD,sBAAc,EAAElD,MAAM,CAACC,YAAP,CAAoBqC,KAApB,CAA0B,IAA1B,EAAgChB,IAAI,CAACiB,QAAL,CAAcnD,EAAd,EAAkBA,EAAE,IAAI,EAAxB,CAAhC,CADF;AAEd+D,0BAAkB,EAAE7B,IAAI,CAAClC,EAAE,EAAH,CAAJ,GAAckC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc;AAFlC,OAAhB;AAID;AACF;;AAED;;;AAGA6C,WAAS,CAAC9B,KAAD,EAAQ;AACf;AACA,UAAMmB,IAAI,GAAG,KAAKpC,KAAlB;AACA;;AACA,QAAIE,EAAE,GAAGe,KAAK,CAACX,MAAf;AACA;;AACA,UAAMsB,cAAc,GAAG,KAAKA,cAAL,GAAsB,EAA7C;AACA;;AACA,UAAMjB,IAAI,GAAGM,KAAK,CAACX,MAAN,GAAeW,KAAK,CAACN,IAAlC,CARe,CAUf;;AACA,QAAIM,KAAK,CAACE,IAAN,KAAe,MAAnB,EAA2B;AACzB,YAAM,IAAIe,KAAJ,CAAU,wBAAwBjB,KAAK,CAACE,IAAxC,CAAN;AACD;;AAGD,WAAOjB,EAAE,GAAGS,IAAZ,EAAkB;AAChBiB,oBAAc,CAAChB,IAAf,CAAoB;AAClBsD,gCAAwB,EAAE9B,IAAI,CAAClC,EAAE,EAAH,CAAJ,GAAckC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CADpC;AAElBiE,gCAAwB,EAAE/B,IAAI,CAAClC,EAAE,EAAH,CAAJ,GAAckC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc;AAFpC,OAApB;AAID;AACF;;AAED;;;AAGA8C,WAAS,CAAC/B,KAAD,EAAQ;AACf;AACA,QAAIA,KAAK,CAACE,IAAN,KAAe,MAAnB,EAA2B;AACzB,YAAM,IAAIe,KAAJ,CAAU,wBAAwBjB,KAAK,CAACE,IAAxC,CAAN;AACD;;AAED,SAAKU,uBAAL,GAA+B,KAAKiC,cAAL,CAAoB7C,KAApB,CAA/B;AACD;;AAGD;;;AAGAgC,WAAS,CAAChC,KAAD,EAAQ;AACf;AACA,QAAIA,KAAK,CAACE,IAAN,KAAe,MAAnB,EAA2B;AACzB,YAAM,IAAIe,KAAJ,CAAU,wBAAwBjB,KAAK,CAACE,IAAxC,CAAN;AACD;;AAED,SAAKW,uBAAL,GAA+B,KAAKiC,cAAL,CAAoB9C,KAApB,CAA/B;AACD;;AAED;;;AAGAiC,WAAS,CAACjC,KAAD,EAAQ;AACf;AACA,UAAMmB,IAAI,GAAG,KAAKpC,KAAlB;AACA;;AACA,QAAIE,EAAE,GAAGe,KAAK,CAACX,MAAf;AACA;;AACA,UAAM8D,OAAO,GAAG,KAAKC,MAAL,GAAc,EAA9B;AACA;;AACA,UAAMtC,YAAY,GAAG,KAAKA,YAAL,GAAoB,EAAzC;AACA;;AACA,UAAMpB,IAAI,GAAGM,KAAK,CAACX,MAAN,GAAeW,KAAK,CAACN,IAAlC;AACA;;AACA,QAAI2D,UAAJ;AACA;;AACA,QAAIC,KAAJ;AACA;;AACA,QAAIC,GAAJ;AACA;;AACA,QAAIC,SAAJ;AACA;;AACA,QAAIC,OAAJ;AACA;;AACA,QAAIpD,UAAJ;AACA;;AACA,QAAIqD,aAAJ;AACA;;AACA,QAAIC,eAAJ;AACA;;AACA,QAAIC,UAAJ;AACA;;AACA,QAAIC,UAAJ,CA9Be,CAgCf;;AACA,QAAI7D,KAAK,CAACE,IAAN,KAAe,MAAnB,EAA2B;AACzB,YAAM,IAAIe,KAAJ,CAAU,wBAAwBjB,KAAK,CAACE,IAAxC,CAAN;AACD;;AAED,WAAOjB,EAAE,GAAGS,IAAZ,EAAkB;AAChB2D,gBAAU,GAAGxD,MAAM,CAACC,YAAP,CAAoBqC,KAApB,CAA0B,IAA1B,EAAgChB,IAAI,CAACiB,QAAL,CAAcnD,EAAd,EAAkBA,EAAE,IAAI,EAAxB,CAAhC,CAAb;AACAqE,WAAK,GAAG,CACLnC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAAf,GAAqBkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAAnC,GAAyCkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,EAAvD,GAA8DkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,EADtE,MAEF,CAFN;AAGAsE,SAAG,GAAG,CACHpC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAAf,GAAqBkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAAnC,GAAyCkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,EAAvD,GAA8DkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,EADxE,MAEA,CAFN;AAGAuE,eAAS,GAAG,CACTrC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAAf,GAAqBkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAAnC,GAAyCkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,EAAvD,GAA8DkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,EADlE,MAEN,CAFN;AAGAwE,aAAO,GAAG,CACPtC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAAf,GAAqBkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAAnC,GAAyCkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,EAAvD,GAA8DkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,EADpE,MAEJ,CAFN;AAGAoB,gBAAU,GAAG,CACVc,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAAf,GAAqBkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAAnC,GAAyCkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,EAAvD,GAA8DkC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,EADjE,MAEP,CAFN;AAGAyE,mBAAa,GAAGvC,IAAI,CAAClC,EAAE,EAAH,CAApB;AACA0E,qBAAe,GAAIxC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,EAAf,IAAsB,EAAxC;AACA2E,gBAAU,GAAGzC,IAAI,CAAClC,EAAE,EAAH,CAAJ,GAAckC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAAzC;AACA4E,gBAAU,GAAG1C,IAAI,CAAClC,EAAE,EAAH,CAAJ,GAAckC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAAzC;AAEA,UAAImE,MAAM,GAAG,IAAIU,UAAJ,CAAe,IAAIC,UAAJ,CAAe5C,IAAI,CAACiB,QAAL,CACzC,KAAKZ,YAAL,CAAkBnC,MAAlB,GAA2BiE,KAAK,GAAG,CADM,EAEzC,KAAK9B,YAAL,CAAkBnC,MAAlB,GAA2BkE,GAAG,GAAG,CAFQ,CAAf,EAGzBS,MAHU,CAAb;AAKAR,eAAS,IAAIF,KAAb;AACAG,aAAO,IAAIH,KAAX;;AAEA,UAAIjD,UAAU,GAAG,CAAjB,EAAoB;AAClB,cAAM4D,MAAM,GAAG,KAAKC,gBAAL,CAAsBd,MAAtB,EAA8B/C,UAA9B,CAAf;AACA+C,cAAM,GAAGa,MAAM,CAACb,MAAhB;AACA/C,kBAAU,IAAI4D,MAAM,CAACE,QAArB;AACAX,iBAAS,IAAIS,MAAM,CAACE,QAApB;AACAV,eAAO,IAAIQ,MAAM,CAACE,QAAlB;AACD;;AAEDhB,aAAO,CAACxD,IAAR,CAAayD,MAAb;AAEAtC,kBAAY,CAACnB,IAAb,CAAkB;AAChB0D,kBAAU,EAAEA,UADI;AAEhBC,aAAK,EAAEA,KAFS;AAGhBC,WAAG,EAAEA,GAHW;AAIhBC,iBAAS,EAAEA,SAJK;AAKhBC,eAAO,EAAEA,OALO;AAMhBpD,kBAAU,EAAEA,UANI;AAOhBqD,qBAAa,EAAEA,aAPC;AAQhBC,uBAAe,EAAEA,eARD;AAShBC,kBAAU,EAAEA,UATI;AAUhBC,kBAAU,EAAEA;AAVI,OAAlB;AAYD;AACF;;AAED;;;;;AAKAK,kBAAgB,CAACd,MAAD,EAAS/C,UAAT,EAAqB;AACnC;AACA,QAAI+D,SAAJ;AACA;;AACA,QAAIC,CAAJ;AACA;;AACA,QAAIC,EAAJ;AACA;;AACA,QAAIC,CAAJ;AACA;;AACA,QAAIJ,QAAQ,GAAG,CAAf,CAVmC,CAYnC;;AACA,WAAO9D,UAAU,GAAI,KAAKA,UAA1B,EAAuC;AAAE;AACvC+D,eAAS,GAAG,IAAIN,UAAJ,CAAeV,MAAM,CAACjE,MAAP,GAAgB,CAA/B,CAAZ;;AACA,WAAKkF,CAAC,GAAGE,CAAC,GAAG,CAAR,EAAWD,EAAE,GAAGlB,MAAM,CAACjE,MAA5B,EAAoCkF,CAAC,GAAGC,EAAxC,EAA4C,EAAED,CAA9C,EAAiD;AAC/CD,iBAAS,CAACG,CAAC,EAAF,CAAT,GAAiBnB,MAAM,CAACiB,CAAD,CAAvB;AACAD,iBAAS,CAACG,CAAC,EAAF,CAAT,GAAiBnB,MAAM,CAACiB,CAAD,CAAvB;AACD;;AACDjB,YAAM,GAAGgB,SAAT;AACAD,cAAQ,IAAI,CAAZ;AACA9D,gBAAU,IAAI,CAAd;AACD;;AAED,WAAO;AACL+C,YAAM,EAAEA,MADH;AAELe,cAAQ,EAAEA;AAFL,KAAP;AAID;;AAED;;;;AAIAtB,gBAAc,CAAC7C,KAAD,EAAQ;AACpB;AACA,UAAMmB,IAAI,GAAG,KAAKpC,KAAlB;AACA;;AACA,QAAIE,EAAE,GAAGe,KAAK,CAACX,MAAf;AACA;;AACA,UAAMK,IAAI,GAAGM,KAAK,CAACX,MAAN,GAAeW,KAAK,CAACN,IAAlC;AACA;;AACA,QAAI8E,IAAJ;AACA;;AACA,QAAIC,GAAJ;AACA;;AACA,UAAMC,MAAM,GAAG,EAAf;;AAEA,WAAOzF,EAAE,GAAGS,IAAZ,EAAkB;AAChB;AACA;AACAT,QAAE,IAAI,CAAN,CAHgB,CAKhB;;AACAuF,UAAI,GAAGrD,IAAI,CAAClC,EAAE,EAAH,CAAJ,GAAckC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAAnC;AACAwF,SAAG,GAAG,KAAK1D,wBAAL,CAA8ByD,IAA9B,CAAN;;AACA,UAAIC,GAAG,KAAK,KAAK,CAAjB,EAAoB;AAClB;AACAC,cAAM,CAAC/E,IAAP,CAAY;AACVO,cAAI,EAAEuE,GADI;AAEVE,eAAK,EAAE;AACLH,gBAAI,EAAEA,IADD;AAELI,kBAAM,EAAEzD,IAAI,CAAClC,EAAD,CAAJ,GAAYkC,IAAI,CAAClC,EAAE,GAAG,CAAN,CAAJ,IAAgB,CAAjB,IAAuB,EAAvB,IAA6B,EAF3C;AAGL4F,cAAE,EAAE1D,IAAI,CAAClC,EAAE,EAAH,CAHH;AAIL6F,cAAE,EAAE3D,IAAI,CAAClC,EAAE,EAAH;AAJH;AAFG,SAAZ;AASD,OAXD,MAWO;AACL;AACA,gBAAQwF,GAAR;AACE,eAAK,UAAL;AACA;;AACA,eAAK,UAAL;AACA;;AACA,eAAK,QAAL;AACA;;AACA,eAAK,UAAL;AACEC,kBAAM,CAAC/E,IAAP,CAAY;AACVO,kBAAI,EAAEuE,GADI;AAEVE,mBAAK,EAAE;AACLE,kBAAE,EAAE1D,IAAI,CAAClC,EAAE,EAAH,CADH;AAEL6F,kBAAE,EAAE3D,IAAI,CAAClC,EAAE,EAAH;AAFH;AAFG,aAAZ;AAOA;;AACF;AACEyF,kBAAM,CAAC/E,IAAP,CAAY;AACVO,kBAAI,EAAEuE,GADI;AAEVE,mBAAK,EAAE;AACLC,sBAAM,EAAEzD,IAAI,CAAClC,EAAE,EAAH,CAAJ,GAAckC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAAf,IAAqB,EAArB,IAA2B;AAD3C;AAFG,aAAZ;AAMA;AAvBJ;AAyBD,OA9Ce,CAgDhB;AACA;;;AACAA,QAAE,IAAI,CAAN,CAlDgB,CAoDhB;AACA;;AACAA,QAAE,IAAI,CAAN;AACD;;AAED,WAAOyF,MAAP;AACD;;AAED;;;;AAIA5B,gBAAc,CAAC9C,KAAD,EAAQ;AACpB;AACA,UAAMmB,IAAI,GAAG,KAAKpC,KAAlB;AACA;;AACA,QAAIE,EAAE,GAAGe,KAAK,CAACX,MAAf;AACA;;AACA,UAAMK,IAAI,GAAGM,KAAK,CAACX,MAAN,GAAeW,KAAK,CAACN,IAAlC;AACA;;AACA,QAAI8E,IAAJ;AACA;;AACA,QAAIC,GAAJ;AACA;;AACA,UAAMC,MAAM,GAAG,EAAf;;AAEA,WAAOzF,EAAE,GAAGS,IAAZ,EAAkB;AAChB8E,UAAI,GAAGrD,IAAI,CAAClC,EAAE,EAAH,CAAJ,GAAckC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAAnC;AACAwF,SAAG,GAAG,KAAK1D,wBAAL,CAA8ByD,IAA9B,CAAN;;AACA,UAAIC,GAAG,KAAK,KAAK,CAAjB,EAAoB;AAClBC,cAAM,CAAC/E,IAAP,CAAY;AACVO,cAAI,EAAEuE,GADI;AAEVE,eAAK,EAAE;AACLH,gBAAI,EAAEA,IADD;AAELI,kBAAM,EAAEzD,IAAI,CAAClC,EAAD,CAAJ,GAAYkC,IAAI,CAAClC,EAAE,GAAG,CAAN,CAAJ,IAAgB,CAAjB,IAAuB,EAAvB,IAA6B,EAF3C;AAGL4F,cAAE,EAAE1D,IAAI,CAAClC,EAAE,EAAH,CAHH;AAIL6F,cAAE,EAAE3D,IAAI,CAAClC,EAAE,EAAH;AAJH;AAFG,SAAZ;AASA;AACD;;AAED,cAAQwF,GAAR;AACE,aAAK,QAAL;AACA;;AACA,aAAK,UAAL;AACA;;AACA,aAAK,UAAL;AACA;;AACA,aAAK,UAAL;AACEC,gBAAM,CAAC/E,IAAP,CAAY;AACVO,gBAAI,EAAEuE,GADI;AAEVE,iBAAK,EAAE;AACLE,gBAAE,EAAE1D,IAAI,CAAClC,EAAE,EAAH,CADH;AAEL6F,gBAAE,EAAE3D,IAAI,CAAClC,EAAE,EAAH;AAFH;AAFG,WAAZ;AAOA;;AACF;AACEyF,gBAAM,CAAC/E,IAAP,CAAY;AACVO,gBAAI,EAAEuE,GADI;AAEVE,iBAAK,EAAE;AACLC,oBAAM,EAAEzD,IAAI,CAAClC,EAAE,EAAH,CAAJ,GAAckC,IAAI,CAAClC,EAAE,EAAH,CAAJ,IAAc,CAAf,IAAqB,EAArB,IAA2B;AAD3C;AAFG,WAAZ;AAMA;AAvBJ;AAyBD;;AAED,WAAOyF,MAAP;AACD;;AAED;;;AAGAK,kBAAgB,GAAG;AACjB;AACA,UAAMrE,UAAU,GAAG,KAAKA,UAAxB;AACA;;AACA,UAAMsE,IAAI,GAAG,KAAKrE,cAAlB;AACA;;AACA,UAAM+D,MAAM,GAAG,EAAf;AACA;;AACA,QAAIO,QAAJ;AACA;;AACA,QAAIC,WAAJ;AACA;;AACA,QAAIC,QAAJ;AACA;;AACA,QAAIC,mBAAJ;AACA;;AACA,QAAIC,mBAAJ;AACA;;AACA,QAAIhB,CAAJ;AACA;;AACA,QAAIC,EAAJ;AACA;;AACA,QAAIC,CAAJ;AACA;;AACA,QAAIe,EAAJ,CAxBiB,CA0BjB;;AACA,SAAKjB,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAG5D,UAAU,CAACvB,MAA5B,EAAoCkF,CAAC,GAAGC,EAAxC,EAA4C,EAAED,CAA9C,EAAiD;AAC/CY,cAAQ,GAAGvE,UAAU,CAAC2D,CAAD,CAAV,CAAcrB,kBAAzB;AACAkC,iBAAW,GAAGxE,UAAU,CAAC2D,CAAC,GAAG,CAAL,CAAV,GAAoB3D,UAAU,CAAC2D,CAAC,GAAG,CAAL,CAAV,CAAkBrB,kBAAtC,GAA2DgC,IAAI,CAAC7F,MAA9E;AACAgG,cAAQ,GAAG,EAAX,CAH+C,CAK/C;;AACA,WAAKZ,CAAC,GAAGU,QAAJ,EAAcK,EAAE,GAAGJ,WAAxB,EAAqCX,CAAC,GAAGe,EAAzC,EAA6C,EAAEf,CAA/C,EAAkD;AAChDa,2BAAmB,GAAG,KAAKG,0BAAL,CAAgCP,IAAhC,EAAsCT,CAAtC,CAAtB;AACAc,2BAAmB,GAAG,KAAKG,0BAAL,CAAgCR,IAAhC,EAAsCT,CAAtC,CAAtB;AAEAY,gBAAQ,CAACxF,IAAT,CAAc;AACZ8F,mBAAS,EAAEL,mBAAmB,CAACK,SADnB;AAEZC,2BAAiB,EAAEN,mBAAmB,CAACO,aAF3B;AAGZC,mBAAS,EAAEP,mBAAmB,CAACO,SAHnB;AAIZC,2BAAiB,EAAER,mBAAmB,CAACS;AAJ3B,SAAd;AAMD;;AAEDpB,YAAM,CAAC/E,IAAP,CAAY;AACVoG,YAAI,EAAErF,UAAU,CAAC2D,CAAD,CAAV,CAActB,cADV;AAEViD,YAAI,EAAEb;AAFI,OAAZ;AAID;;AAED,WAAOT,MAAP;AACD;;AAED;;;AAGAuB,cAAY,GAAG;AACb;AACA,UAAM5D,MAAM,GAAG,KAAK/B,YAApB;AACA;;AACA,UAAM0E,IAAI,GAAG,KAAKzE,UAAlB;AACA;;AACA,UAAMmE,MAAM,GAAG,EAAf;AACA;;AACA,QAAIO,QAAJ;AACA;;AACA,QAAIC,WAAJ;AACA;;AACA,QAAIC,QAAJ;AACA;;AACA,QAAIzE,UAAJ;AACA;;AACA,QAAIwF,eAAJ;AACA;;AACA,QAAIC,eAAJ;AACA;;AACA,QAAI9B,CAAJ;AACA;;AACA,QAAIC,EAAJ;AACA;;AACA,QAAIC,CAAJ;AACA;;AACA,QAAIe,EAAJ,CA1Ba,CA4Bb;;AACA,SAAKjB,CAAC,GAAG,CAAJ,EAAOC,EAAE,GAAGjC,MAAM,CAAClD,MAAxB,EAAgCkF,CAAC,GAAGC,EAApC,EAAwC,EAAED,CAA1C,EAA6C;AAC3CY,cAAQ,GAAG5C,MAAM,CAACgC,CAAD,CAAN,CAAU9B,cAArB;AACA2C,iBAAW,GAAG7C,MAAM,CAACgC,CAAC,GAAG,CAAL,CAAN,GAAgBhC,MAAM,CAACgC,CAAC,GAAG,CAAL,CAAN,CAAc9B,cAA9B,GAA+CyC,IAAI,CAAC7F,MAAlE;AACAgG,cAAQ,GAAG,EAAX,CAH2C,CAK3C;;AACA,WAAKZ,CAAC,GAAGU,QAAJ,EAAcK,EAAE,GAAGJ,WAAxB,EAAqCX,CAAC,GAAGe,EAAzC,EAA6C,EAAEf,CAA/C,EAAkD;AAChD2B,uBAAe,GAAG,KAAKE,sBAAL,CAA4BpB,IAA5B,EAAkCT,CAAlC,CAAlB;AACA4B,uBAAe,GAAG,KAAKE,sBAAL,CAA4BrB,IAA5B,EAAkCT,CAAlC,CAAlB;AAEAY,gBAAQ,CAACxF,IAAT,CAAc;AACZ8F,mBAAS,EAAES,eAAe,CAACT,SADf;AAEZC,2BAAiB,EAAEQ,eAAe,CAACP,aAFvB;AAGZC,mBAAS,EAAEO,eAAe,CAACP,SAHf;AAIZC,2BAAiB,EAAEM,eAAe,CAACL;AAJvB,SAAd;AAOApF,kBAAU,GACRwF,eAAe,CAACT,SAAhB,CAA0B,YAA1B,MAA4C,KAAK,CAAjD,GACES,eAAe,CAACT,SAAhB,CAA0B,YAA1B,EAAwCb,MAD1C,GAEEuB,eAAe,CAACP,SAAhB,CAA0B,YAA1B,MAA4C,KAAK,CAAjD,GACEO,eAAe,CAACP,SAAhB,CAA0B,YAA1B,EAAwChB,MAD1C,GAEE,IALN;AAMD;;AAEDF,YAAM,CAAC/E,IAAP,CAAY;AACVoG,YAAI,EAAE1D,MAAM,CAACgC,CAAD,CAAN,CAAUnC,UADN;AAEV8D,YAAI,EAAEb,QAFI;AAGVmB,cAAM,EAAEjE,MAAM,CAACgC,CAAD,CAHJ;AAIV3D,kBAAU,EAAEA;AAJF,OAAZ;AAMD;;AAED,WAAOgE,MAAP;AACD;;AAED;;;;;;AAMAa,4BAA0B,CAACP,IAAD,EAAO9F,KAAP,EAAc;AACtC,UAAMqH,MAAM,GAAG,KAAKC,gBAAL,CACbxB,IADa,EAEbA,IAAI,CAAC9F,KAAD,CAAJ,CAAY+D,wBAFC,EAGb+B,IAAI,CAAC9F,KAAK,GAAG,CAAT,CAAJ,GAAkB8F,IAAI,CAAC9F,KAAK,GAAG,CAAT,CAAJ,CAAgB+D,wBAAlC,GAA6D,KAAKpC,uBAAL,CAA6B1B,MAH7E,EAIb,KAAK0B,uBAJQ,CAAf;AAOA,WAAO;AACL4E,eAAS,EAAEc,MAAM,CAACA,MADb;AAELZ,mBAAa,EAAEY,MAAM,CAACE;AAFjB,KAAP;AAID;;AAED;;;;;;AAMAjB,4BAA0B,CAACR,IAAD,EAAO9F,KAAP,EAAc;AACtC,UAAMqH,MAAM,GAAG,KAAKC,gBAAL,CACbxB,IADa,EAEbA,IAAI,CAAC9F,KAAD,CAAJ,CAAY0D,oBAFC,EAGboC,IAAI,CAAC9F,KAAK,GAAG,CAAT,CAAJ,GAAkB8F,IAAI,CAAC9F,KAAK,GAAG,CAAT,CAAJ,CAAgBgE,wBAAlC,GAA6D,KAAKtC,uBAAL,CAA6BzB,MAH7E,EAIb,KAAKyB,uBAJQ,CAAf;AAOA,WAAO;AACLgF,eAAS,EAAEW,MAAM,CAACA,MADb;AAELT,mBAAa,EAAES,MAAM,CAACE;AAFjB,KAAP;AAID;;AAED;;;;;;AAMAL,wBAAsB,CAACpB,IAAD,EAAO9F,KAAP,EAAc;AAClC,UAAMqH,MAAM,GAAG,KAAKC,gBAAL,CACbxB,IADa,EAEbA,IAAI,CAAC9F,KAAD,CAAJ,CAAYyD,oBAFC,EAGbqC,IAAI,CAAC9F,KAAK,GAAG,CAAT,CAAJ,GAAkB8F,IAAI,CAAC9F,KAAK,GAAG,CAAT,CAAJ,CAAgByD,oBAAlC,GAAyD,KAAKlC,mBAAL,CAAyBtB,MAHrE,EAIb,KAAKsB,mBAJQ,CAAf;AAOA,WAAO;AACLgF,eAAS,EAAEc,MAAM,CAACA,MADb;AAELZ,mBAAa,EAAEY,MAAM,CAACE;AAFjB,KAAP;AAID;;AAED;;;;;;AAMAJ,wBAAsB,CAACrB,IAAD,EAAO9F,KAAP,EAAc;AAClC;AACA,UAAMqH,MAAM,GAAG,KAAKC,gBAAL,CACbxB,IADa,EAEbA,IAAI,CAAC9F,KAAD,CAAJ,CAAY0D,oBAFC,EAGboC,IAAI,CAAC9F,KAAK,GAAG,CAAT,CAAJ,GAAkB8F,IAAI,CAAC9F,KAAK,GAAG,CAAT,CAAJ,CAAgB0D,oBAAlC,GAAyD,KAAKpC,mBAAL,CAAyBrB,MAHrE,EAIb,KAAKqB,mBAJQ,CAAf;AAOA,WAAO;AACLoF,eAAS,EAAEW,MAAM,CAACA,MADb;AAELT,mBAAa,EAAES,MAAM,CAACE;AAFjB,KAAP;AAID;;AAED;;;;;;;;AAQAD,kBAAgB,CAACxB,IAAD,EAAO0B,UAAP,EAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AACvD;AACA,UAAMH,UAAU,GAAG,EAAnB;AACA;;AACA,UAAMF,MAAM,GAAG;AACb,iBAAW,EADE;AAEb,kBAAY;AACVzB,UAAE,EAAE,GADM;AAEVD,UAAE,EAAE;AAFM;AAFC,KAAf,CAJuD,CAUpD;;AACH;;AACA,QAAImB,IAAJ;AACA;;AACA,QAAI3B,CAAJ;AACA;;AACA,QAAIC,EAAJ;;AAEA,SAAKD,CAAC,GAAGqC,UAAJ,EAAgBpC,EAAE,GAAGqC,QAA1B,EAAoCtC,CAAC,GAAGC,EAAxC,EAA4C,EAAED,CAA9C,EAAiD;AAC/C2B,UAAI,GAAGY,UAAU,CAACvC,CAAD,CAAjB;AACAoC,gBAAU,CAAC9G,IAAX,CAAgBqG,IAAhB;;AAEA,UAAIA,IAAI,CAAC9F,IAAL,KAAc,SAAlB,EAA6B;AAC3BqG,cAAM,CAACM,OAAP,CAAelH,IAAf,CAAoBqG,IAAI,CAACrB,KAAzB;AACD,OAFD,MAEO;AACL4B,cAAM,CAACP,IAAI,CAAC9F,IAAN,CAAN,GAAoB8F,IAAI,CAACrB,KAAzB;AACD;AACF;;AAED,WAAO;AACL4B,YAAM,EAAEA,MADH;AAELE,gBAAU,EAAEA;AAFP,KAAP;AAID;;AAr6BiB;AAw6BLtG,qEAAf,E","file":"sf2.parser.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SoundFont\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SoundFont\"] = factory();\n\telse\n\t\troot[\"SoundFont\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/sf2.js\");\n","/**\n * Riff Parser class\n * @private\n */\nexport default class Riff {\n  /**\n   * @param {ByteArray} input input buffer.\n   * @param {Object=} optParams option parameters.\n   */\n  constructor(input, optParams = {}) {\n    /** @type {ByteArray} */\n    this.input = input;\n    /** @type {number} */\n    this.ip = optParams.index || 0;\n    /** @type {number} */\n    this.length = optParams.length || input.length - this.ip;\n    /** @type {Array.<RiffChunk>} */\n    this.chunkList;\n    /** @type {number} */\n    this.offset = this.ip;\n    /** @type {boolean} */\n    this.padding =\n      optParams.padding !== void 0 ? optParams.padding : true;\n    /** @type {boolean} */\n    this.bigEndian =\n      optParams.bigEndian !== void 0 ? optParams.bigEndian : false;\n  }\n\n  /**\n   */\n  parse() {\n    /** @type {number} */\n    const length = this.length + this.offset;\n\n    this.chunkList = [];\n\n    while (this.ip < length) {\n      this.parseChunk();\n    }\n  }\n\n  /**\n   */\n  parseChunk() {\n    /** @type {ByteArray} */\n    const input = this.input;\n    /** @type {number} */\n    let ip = this.ip;\n    /** @type {number} */\n    let size;\n\n    this.chunkList.push(new RiffChunk(\n      String.fromCharCode(input[ip++], input[ip++], input[ip++], input[ip++]),\n      (size = this.bigEndian ?\n        ((input[ip++] << 24) | (input[ip++] << 16) |\n          (input[ip++] << 8) | (input[ip++])) >>> 0 :\n        ((input[ip++]) | (input[ip++] << 8) |\n          (input[ip++] << 16) | (input[ip++] << 24)) >>> 0\n      ),\n      ip,\n    ));\n\n    ip += size;\n\n    // padding\n    if (this.padding && ((ip - this.offset) & 1) === 1) {\n      ip++;\n    }\n\n    this.ip = ip;\n  }\n\n  /**\n   * @param {number} index chunk index.\n   * @return {?RiffChunk}\n   */\n  getChunk(index) {\n    /** @type {RiffChunk} */\n    const chunk = this.chunkList[index];\n\n    if (chunk === void 0) {\n      return null;\n    }\n\n    return chunk;\n  }\n\n  /**\n   * @return {number}\n   */\n  getNumberOfChunks() {\n    return this.chunkList.length;\n  }\n}\n\n/**\n * Riff Chunk Structure\n * @interface\n */\nclass RiffChunk {\n  /**\n   * @param {string} type\n   * @param {number} size\n   * @param {number} offset\n   */\n  constructor(type, size, offset) {\n    /** @type {string} */\n    this.type = type;\n    /** @type {number} */\n    this.size = size;\n    /** @type {number} */\n    this.offset = offset;\n  }\n}\n","import Riff from './riff.js';\n\n/**\n * SoundFont Parser Class\n */\nexport class Parser {\n  /**\n   * @param {ByteArray} input\n   * @param {Object=} optParams\n   */\n  constructor(input, optParams = {}) {\n    /** @type {ByteArray} */\n    this.input = input;\n    /** @type {(Object|undefined)} */\n    this.parserOption = optParams.parserOption || {};\n    /** @type {(Number|undefined)} */\n    this.sampleRate = optParams.sampleRate || 22050; // よくわからんが、OSで指定されているサンプルレートを入れないと音が切れ切れになる。\n\n    /** @type {Array.<Object>} */\n    this.presetHeader;\n    /** @type {Array.<Object>} */\n    this.presetZone;\n    /** @type {Array.<Object>} */\n    this.presetZoneModulator;\n    /** @type {Array.<Object>} */\n    this.presetZoneGenerator;\n    /** @type {Array.<Object>} */\n    this.instrument;\n    /** @type {Array.<Object>} */\n    this.instrumentZone;\n    /** @type {Array.<Object>} */\n    this.instrumentZoneModulator;\n    /** @type {Array.<Object>} */\n    this.instrumentZoneGenerator;\n    /** @type {Array.<Object>} */\n    this.sampleHeader;\n\n    /**\n     * @type {Array.<string>}\n     * @const\n     */\n    this.GeneratorEnumeratorTable = [\n      'startAddrsOffset',\n      'endAddrsOffset',\n      'startloopAddrsOffset',\n      'endloopAddrsOffset',\n      'startAddrsCoarseOffset',\n      'modLfoToPitch',\n      'vibLfoToPitch',\n      'modEnvToPitch',\n      'initialFilterFc',\n      'initialFilterQ',\n      'modLfoToFilterFc',\n      'modEnvToFilterFc',\n      'endAddrsCoarseOffset',\n      'modLfoToVolume', , // 14\n      'chorusEffectsSend',\n      'reverbEffectsSend',\n      'pan', , , , // 18,19,20\n      'delayModLFO',\n      'freqModLFO',\n      'delayVibLFO',\n      'freqVibLFO',\n      'delayModEnv',\n      'attackModEnv',\n      'holdModEnv',\n      'decayModEnv',\n      'sustainModEnv',\n      'releaseModEnv',\n      'keynumToModEnvHold',\n      'keynumToModEnvDecay',\n      'delayVolEnv',\n      'attackVolEnv',\n      'holdVolEnv',\n      'decayVolEnv',\n      'sustainVolEnv',\n      'releaseVolEnv',\n      'keynumToVolEnvHold',\n      'keynumToVolEnvDecay',\n      'instrument', , // 42\n      'keyRange',\n      'velRange',\n      'startloopAddrsCoarseOffset',\n      'keynum',\n      'velocity',\n      'initialAttenuation', , // 49\n      'endloopAddrsCoarseOffset',\n      'coarseTune',\n      'fineTune',\n      'sampleID',\n      'sampleModes', , // 55\n      'scaleTuning',\n      'exclusiveClass',\n      'overridingRootKey', // 59\n      'endOper',\n    ];\n  }\n\n  /** @export */\n  parse() {\n    /** @type {Riff} */\n    const parser = new Riff(this.input, this.parserOption);\n\n    // parse RIFF chunk\n    parser.parse();\n    if (parser.chunkList.length !== 1) {\n      throw new Error('wrong chunk length');\n    }\n\n    /** @type {?RiffChunk} */\n    const chunk = parser.getChunk(0);\n    if (chunk === null) {\n      throw new Error('chunk not found');\n    }\n\n    this.parseRiffChunk(chunk);\n    // console.log(this.sampleHeader);\n    this.input = null;\n  }\n\n  /**\n   * @param {RiffChunk} chunk\n   */\n  parseRiffChunk(chunk) {\n    /** @type {ByteArray} */\n    const data = this.input;\n    /** @type {number} */\n    let ip = chunk.offset;\n\n    // check parse target\n    if (chunk.type !== 'RIFF') {\n      throw new Error('invalid chunk type:' + chunk.type);\n    }\n\n    // check signature\n    /** @type {string} */\n    const signature = String.fromCharCode(data[ip++], data[ip++], data[ip++], data[ip++]);\n    if (signature !== 'sfbk') {\n      throw new Error('invalid signature:' + signature);\n    }\n\n    // read structure\n    /** @type {Riff} */\n    const parser = new Riff(data, { 'index': ip, 'length': chunk.size - 4 });\n    parser.parse();\n    if (parser.getNumberOfChunks() !== 3) {\n      throw new Error('invalid sfbk structure');\n    }\n\n    // INFO-list\n    this.parseInfoList( /** @type {!RiffChunk} */(parser.getChunk(0)));\n\n    // sdta-list\n    this.parseSdtaList( /** @type {!RiffChunk} */(parser.getChunk(1)));\n\n    // pdta-list\n    this.parsePdtaList( /** @type {!RiffChunk} */(parser.getChunk(2)));\n  };\n\n  /**\n   * @param {RiffChunk} chunk\n   */\n  parseInfoList(chunk) {\n    /** @type {ByteArray} */\n    const data = this.input;\n    /** @type {number} */\n    let ip = chunk.offset;\n\n    // check parse target\n    if (chunk.type !== 'LIST') {\n      throw new Error('invalid chunk type:' + chunk.type);\n    }\n\n    // check signature\n    /** @type {string} */\n    const signature = String.fromCharCode(data[ip++], data[ip++], data[ip++], data[ip++]);\n    if (signature !== 'INFO') {\n      throw new Error('invalid signature:' + signature);\n    }\n\n    // read structure\n    /** @type {Riff} */\n    const parser = new Riff(data, { 'index': ip, 'length': chunk.size - 4 });\n    parser.parse();\n  };\n\n  /**\n   * @param {RiffChunk} chunk\n   */\n  parseSdtaList(chunk) {\n    /** @type {ByteArray} */\n    const data = this.input;\n    /** @type {number} */\n    let ip = chunk.offset;\n\n    // check parse target\n    if (chunk.type !== 'LIST') {\n      throw new Error('invalid chunk type:' + chunk.type);\n    }\n\n    // check signature\n    /** @type {string} */\n    const signature = String.fromCharCode(data[ip++], data[ip++], data[ip++], data[ip++]);\n    if (signature !== 'sdta') {\n      throw new Error('invalid signature:' + signature);\n    }\n\n    // read structure\n    /** @type {Riff} */\n    const parser = new Riff(data, { 'index': ip, 'length': chunk.size - 4 });\n    parser.parse();\n    if (parser.chunkList.length !== 1) {\n      throw new Error('TODO');\n    }\n    this.samplingData =\n      /** @type {{type: string, size: number, offset: number}} */\n      (parser.getChunk(0));\n  };\n\n  /**\n   * @param {RiffChunk} chunk\n   */\n  parsePdtaList(chunk) {\n    /** @type {ByteArray} */\n    const data = this.input;\n    /** @type {number} */\n    let ip = chunk.offset;\n\n    // check parse target\n    if (chunk.type !== 'LIST') {\n      throw new Error('invalid chunk type:' + chunk.type);\n    }\n\n    // check signature\n    /** @type {string} */\n    const signature = String.fromCharCode(data[ip++], data[ip++], data[ip++], data[ip++]);\n    if (signature !== 'pdta') {\n      throw new Error('invalid signature:' + signature);\n    }\n\n    // read structure\n    /** @type {Riff} */\n    const parser = new Riff(data, { 'index': ip, 'length': chunk.size - 4 });\n    parser.parse();\n\n    // check number of chunks\n    if (parser.getNumberOfChunks() !== 9) {\n      throw new Error('invalid pdta chunk');\n    }\n\n    this.parsePhdr( /** @type {RiffChunk} */(parser.getChunk(0)));\n    this.parsePbag( /** @type {RiffChunk} */(parser.getChunk(1)));\n    this.parsePmod( /** @type {RiffChunk} */(parser.getChunk(2)));\n    this.parsePgen( /** @type {RiffChunk} */(parser.getChunk(3)));\n    this.parseInst( /** @type {RiffChunk} */(parser.getChunk(4)));\n    this.parseIbag( /** @type {RiffChunk} */(parser.getChunk(5)));\n    this.parseImod( /** @type {RiffChunk} */(parser.getChunk(6)));\n    this.parseIgen( /** @type {RiffChunk} */(parser.getChunk(7)));\n    this.parseShdr( /** @type {RiffChunk} */(parser.getChunk(8)));\n  };\n\n  /**\n   * @param {RiffChunk} chunk\n   */\n  parsePhdr(chunk) {\n    /** @type {ByteArray} */\n    const data = this.input;\n    /** @type {number} */\n    let ip = chunk.offset;\n    /** @type {Array.<Object>} */\n    const presetHeader = this.presetHeader = [];\n    /** @type {number} */\n    const size = chunk.offset + chunk.size;\n\n    // check parse target\n    if (chunk.type !== 'phdr') {\n      throw new Error('invalid chunk type:' + chunk.type);\n    }\n\n    while (ip < size) {\n      presetHeader.push({\n        presetName: String.fromCharCode.apply(null, data.subarray(ip, ip += 20)),\n        preset: data[ip++] | (data[ip++] << 8),\n        bank: data[ip++] | (data[ip++] << 8),\n        presetBagIndex: data[ip++] | (data[ip++] << 8),\n        library: (data[ip++] | (data[ip++] << 8) | (data[ip++] << 16) | (data[ip++] << 24)) >>> 0,\n        genre: (data[ip++] | (data[ip++] << 8) | (data[ip++] << 16) | (data[ip++] << 24)) >>> 0,\n        morphology: (data[ip++] | (data[ip++] << 8) | (data[ip++] << 16) | (data[ip++] << 24)) >>> 0,\n      });\n    }\n  };\n\n  /**\n   * @param {RiffChunk} chunk\n   */\n  parsePbag(chunk) {\n    /** @type {ByteArray} */\n    const data = this.input;\n    /** @type {number} */\n    let ip = chunk.offset;\n    /** @type {Array.<Object>} */\n    const presetZone = this.presetZone = [];\n    /** @type {number} */\n    const size = chunk.offset + chunk.size;\n\n    // check parse target\n    if (chunk.type !== 'pbag') {\n      throw new Error('invalid chunk type:' + chunk.type);\n    }\n\n    while (ip < size) {\n      presetZone.push({\n        presetGeneratorIndex: data[ip++] | (data[ip++] << 8),\n        presetModulatorIndex: data[ip++] | (data[ip++] << 8),\n      });\n    }\n  };\n\n  /**\n   * @param {RiffChunk} chunk\n   */\n  parsePmod(chunk) {\n    // check parse target\n    if (chunk.type !== 'pmod') {\n      throw new Error('invalid chunk type:' + chunk.type);\n    }\n\n    this.presetZoneModulator = this.parseModulator(chunk);\n  };\n\n  /**\n   * @param {RiffChunk} chunk\n   */\n  parsePgen(chunk) {\n    // check parse target\n    if (chunk.type !== 'pgen') {\n      throw new Error('invalid chunk type:' + chunk.type);\n    }\n    this.presetZoneGenerator = this.parseGenerator(chunk);\n  };\n\n  /**\n   * @param {RiffChunk} chunk\n   */\n  parseInst(chunk) {\n    /** @type {ByteArray} */\n    const data = this.input;\n    /** @type {number} */\n    let ip = chunk.offset;\n    /** @type {Array.<Object>} */\n    const instrument = this.instrument = [];\n    /** @type {number} */\n    const size = chunk.offset + chunk.size;\n\n    // check parse target\n    if (chunk.type !== 'inst') {\n      throw new Error('invalid chunk type:' + chunk.type);\n    }\n\n    while (ip < size) {\n      instrument.push({\n        instrumentName: String.fromCharCode.apply(null, data.subarray(ip, ip += 20)),\n        instrumentBagIndex: data[ip++] | (data[ip++] << 8),\n      });\n    }\n  };\n\n  /**\n   * @param {RiffChunk} chunk\n   */\n  parseIbag(chunk) {\n    /** @type {ByteArray} */\n    const data = this.input;\n    /** @type {number} */\n    let ip = chunk.offset;\n    /** @type {Array.<Object>} */\n    const instrumentZone = this.instrumentZone = [];\n    /** @type {number} */\n    const size = chunk.offset + chunk.size;\n\n    // check parse target\n    if (chunk.type !== 'ibag') {\n      throw new Error('invalid chunk type:' + chunk.type);\n    }\n\n\n    while (ip < size) {\n      instrumentZone.push({\n        instrumentGeneratorIndex: data[ip++] | (data[ip++] << 8),\n        instrumentModulatorIndex: data[ip++] | (data[ip++] << 8),\n      });\n    }\n  };\n\n  /**\n   * @param {RiffChunk} chunk\n   */\n  parseImod(chunk) {\n    // check parse target\n    if (chunk.type !== 'imod') {\n      throw new Error('invalid chunk type:' + chunk.type);\n    }\n\n    this.instrumentZoneModulator = this.parseModulator(chunk);\n  };\n\n\n  /**\n   * @param {RiffChunk} chunk\n   */\n  parseIgen(chunk) {\n    // check parse target\n    if (chunk.type !== 'igen') {\n      throw new Error('invalid chunk type:' + chunk.type);\n    }\n\n    this.instrumentZoneGenerator = this.parseGenerator(chunk);\n  };\n\n  /**\n   * @param {RiffChunk} chunk\n   */\n  parseShdr(chunk) {\n    /** @type {ByteArray} */\n    const data = this.input;\n    /** @type {number} */\n    let ip = chunk.offset;\n    /** @type {Array.<Object>} */\n    const samples = this.sample = [];\n    /** @type {Array.<Object>} */\n    const sampleHeader = this.sampleHeader = [];\n    /** @type {number} */\n    const size = chunk.offset + chunk.size;\n    /** @type {string} */\n    let sampleName;\n    /** @type {number} */\n    let start;\n    /** @type {number} */\n    let end;\n    /** @type {number} */\n    let startLoop;\n    /** @type {number} */\n    let endLoop;\n    /** @type {number} */\n    let sampleRate;\n    /** @type {number} */\n    let originalPitch;\n    /** @type {number} */\n    let pitchCorrection;\n    /** @type {number} */\n    let sampleLink;\n    /** @type {number} */\n    let sampleType;\n\n    // check parse target\n    if (chunk.type !== 'shdr') {\n      throw new Error('invalid chunk type:' + chunk.type);\n    }\n\n    while (ip < size) {\n      sampleName = String.fromCharCode.apply(null, data.subarray(ip, ip += 20));\n      start = (\n        (data[ip++] << 0) | (data[ip++] << 8) | (data[ip++] << 16) | (data[ip++] << 24)\n      ) >>> 0;\n      end = (\n        (data[ip++] << 0) | (data[ip++] << 8) | (data[ip++] << 16) | (data[ip++] << 24)\n      ) >>> 0;\n      startLoop = (\n        (data[ip++] << 0) | (data[ip++] << 8) | (data[ip++] << 16) | (data[ip++] << 24)\n      ) >>> 0;\n      endLoop = (\n        (data[ip++] << 0) | (data[ip++] << 8) | (data[ip++] << 16) | (data[ip++] << 24)\n      ) >>> 0;\n      sampleRate = (\n        (data[ip++] << 0) | (data[ip++] << 8) | (data[ip++] << 16) | (data[ip++] << 24)\n      ) >>> 0;\n      originalPitch = data[ip++];\n      pitchCorrection = (data[ip++] << 24) >> 24;\n      sampleLink = data[ip++] | (data[ip++] << 8);\n      sampleType = data[ip++] | (data[ip++] << 8);\n\n      let sample = new Int16Array(new Uint8Array(data.subarray(\n        this.samplingData.offset + start * 2,\n        this.samplingData.offset + end * 2,\n      )).buffer);\n\n      startLoop -= start;\n      endLoop -= start;\n\n      if (sampleRate > 0) {\n        const adjust = this.adjustSampleData(sample, sampleRate);\n        sample = adjust.sample;\n        sampleRate *= adjust.multiply;\n        startLoop *= adjust.multiply;\n        endLoop *= adjust.multiply;\n      }\n\n      samples.push(sample);\n\n      sampleHeader.push({\n        sampleName: sampleName,\n        start: start,\n        end: end,\n        startLoop: startLoop,\n        endLoop: endLoop,\n        sampleRate: sampleRate,\n        originalPitch: originalPitch,\n        pitchCorrection: pitchCorrection,\n        sampleLink: sampleLink,\n        sampleType: sampleType,\n      });\n    }\n  };\n\n  /**\n   * @param {Array} sample\n   * @param {number} sampleRate\n   * @return {object}\n   */\n  adjustSampleData(sample, sampleRate) {\n    /** @type {Int16Array} */\n    let newSample;\n    /** @type {number} */\n    let i;\n    /** @type {number} */\n    let il;\n    /** @type {number} */\n    let j;\n    /** @type {number} */\n    let multiply = 1;\n\n    // buffer\n    while (sampleRate < (this.sampleRate)) { // AudioContextのサンプルレートに変更\n      newSample = new Int16Array(sample.length * 2);\n      for (i = j = 0, il = sample.length; i < il; ++i) {\n        newSample[j++] = sample[i];\n        newSample[j++] = sample[i];\n      }\n      sample = newSample;\n      multiply *= 2;\n      sampleRate *= 2;\n    }\n\n    return {\n      sample: sample,\n      multiply: multiply,\n    };\n  };\n\n  /**\n   * @param {RiffChunk} chunk\n   * @return {Array.<Object>}\n   */\n  parseModulator(chunk) {\n    /** @type {ByteArray} */\n    const data = this.input;\n    /** @type {number} */\n    let ip = chunk.offset;\n    /** @type {number} */\n    const size = chunk.offset + chunk.size;\n    /** @type {number} */\n    let code;\n    /** @type {string} */\n    let key;\n    /** @type {Array.<Object>} */\n    const output = [];\n\n    while (ip < size) {\n      // Src  Oper\n      // TODO\n      ip += 2;\n\n      // Dest Oper\n      code = data[ip++] | (data[ip++] << 8);\n      key = this.GeneratorEnumeratorTable[code];\n      if (key === void 0) {\n        // Amount\n        output.push({\n          type: key,\n          value: {\n            code: code,\n            amount: data[ip] | (data[ip + 1] << 8) << 16 >> 16,\n            lo: data[ip++],\n            hi: data[ip++],\n          },\n        });\n      } else {\n        // Amount\n        switch (key) {\n          case 'keyRange':\n          /* FALLTHROUGH */\n          case 'velRange':\n          /* FALLTHROUGH */\n          case 'keynum':\n          /* FALLTHROUGH */\n          case 'velocity':\n            output.push({\n              type: key,\n              value: {\n                lo: data[ip++],\n                hi: data[ip++],\n              },\n            });\n            break;\n          default:\n            output.push({\n              type: key,\n              value: {\n                amount: data[ip++] | (data[ip++] << 8) << 16 >> 16,\n              },\n            });\n            break;\n        }\n      }\n\n      // AmtSrcOper\n      // TODO\n      ip += 2;\n\n      // Trans Oper\n      // TODO\n      ip += 2;\n    }\n\n    return output;\n  };\n\n  /**\n   * @param {RiffChunk} chunk\n   * @return {Array.<Object>}\n   */\n  parseGenerator(chunk) {\n    /** @type {ByteArray} */\n    const data = this.input;\n    /** @type {number} */\n    let ip = chunk.offset;\n    /** @type {number} */\n    const size = chunk.offset + chunk.size;\n    /** @type {number} */\n    let code;\n    /** @type {string} */\n    let key;\n    /** @type {Array.<Object>} */\n    const output = [];\n\n    while (ip < size) {\n      code = data[ip++] | (data[ip++] << 8);\n      key = this.GeneratorEnumeratorTable[code];\n      if (key === void 0) {\n        output.push({\n          type: key,\n          value: {\n            code: code,\n            amount: data[ip] | (data[ip + 1] << 8) << 16 >> 16,\n            lo: data[ip++],\n            hi: data[ip++],\n          },\n        });\n        continue;\n      }\n\n      switch (key) {\n        case 'keynum':\n        /* FALLTHROUGH */\n        case 'keyRange':\n        /* FALLTHROUGH */\n        case 'velRange':\n        /* FALLTHROUGH */\n        case 'velocity':\n          output.push({\n            type: key,\n            value: {\n              lo: data[ip++],\n              hi: data[ip++],\n            },\n          });\n          break;\n        default:\n          output.push({\n            type: key,\n            value: {\n              amount: data[ip++] | (data[ip++] << 8) << 16 >> 16,\n            },\n          });\n          break;\n      }\n    }\n\n    return output;\n  };\n\n  /**\n   * @return {Array.<object>}\n   */\n  createInstrument() {\n    /** @type {Array.<Object>} */\n    const instrument = this.instrument;\n    /** @type {Array.<Object>} */\n    const zone = this.instrumentZone;\n    /** @type {Array.<Object>} */\n    const output = [];\n    /** @type {number} */\n    let bagIndex;\n    /** @type {number} */\n    let bagIndexEnd;\n    /** @type {Array.<Object>} */\n    let zoneInfo;\n    /** @type {{generator: Object, generatorInfo: Array.<Object>}} */\n    let instrumentGenerator;\n    /** @type {{modulator: Object, modulatorInfo: Array.<Object>}} */\n    let instrumentModulator;\n    /** @type {number} */\n    let i;\n    /** @type {number} */\n    let il;\n    /** @type {number} */\n    let j;\n    /** @type {number} */\n    let jl;\n\n    // instrument -> instrument bag -> generator / modulator\n    for (i = 0, il = instrument.length; i < il; ++i) {\n      bagIndex = instrument[i].instrumentBagIndex;\n      bagIndexEnd = instrument[i + 1] ? instrument[i + 1].instrumentBagIndex : zone.length;\n      zoneInfo = [];\n\n      // instrument bag\n      for (j = bagIndex, jl = bagIndexEnd; j < jl; ++j) {\n        instrumentGenerator = this.createInstrumentGenerator_(zone, j);\n        instrumentModulator = this.createInstrumentModulator_(zone, j);\n\n        zoneInfo.push({\n          generator: instrumentGenerator.generator,\n          generatorSequence: instrumentGenerator.generatorInfo,\n          modulator: instrumentModulator.modulator,\n          modulatorSequence: instrumentModulator.modulatorInfo,\n        });\n      }\n\n      output.push({\n        name: instrument[i].instrumentName,\n        info: zoneInfo,\n      });\n    }\n\n    return output;\n  };\n\n  /**\n   * @return {Array.<object>}\n   */\n  createPreset() {\n    /** @type {Array.<Object>} */\n    const preset = this.presetHeader;\n    /** @type {Array.<Object>} */\n    const zone = this.presetZone;\n    /** @type {Array.<Object>} */\n    const output = [];\n    /** @type {number} */\n    let bagIndex;\n    /** @type {number} */\n    let bagIndexEnd;\n    /** @type {Array.<Object>} */\n    let zoneInfo;\n    /** @type {number} */\n    let instrument;\n    /** @type {{generator: Object, generatorInfo: Array.<Object>}} */\n    let presetGenerator;\n    /** @type {{modulator: Object, modulatorInfo: Array.<Object>}} */\n    let presetModulator;\n    /** @type {number} */\n    let i;\n    /** @type {number} */\n    let il;\n    /** @type {number} */\n    let j;\n    /** @type {number} */\n    let jl;\n\n    // preset -> preset bag -> generator / modulator\n    for (i = 0, il = preset.length; i < il; ++i) {\n      bagIndex = preset[i].presetBagIndex;\n      bagIndexEnd = preset[i + 1] ? preset[i + 1].presetBagIndex : zone.length;\n      zoneInfo = [];\n\n      // preset bag\n      for (j = bagIndex, jl = bagIndexEnd; j < jl; ++j) {\n        presetGenerator = this.createPresetGenerator_(zone, j);\n        presetModulator = this.createPresetModulator_(zone, j);\n\n        zoneInfo.push({\n          generator: presetGenerator.generator,\n          generatorSequence: presetGenerator.generatorInfo,\n          modulator: presetModulator.modulator,\n          modulatorSequence: presetModulator.modulatorInfo,\n        });\n\n        instrument =\n          presetGenerator.generator['instrument'] !== void 0 ?\n            presetGenerator.generator['instrument'].amount :\n            presetModulator.modulator['instrument'] !== void 0 ?\n              presetModulator.modulator['instrument'].amount :\n              null;\n      }\n\n      output.push({\n        name: preset[i].presetName,\n        info: zoneInfo,\n        header: preset[i],\n        instrument: instrument,\n      });\n    }\n\n    return output;\n  };\n\n  /**\n   * @param {Array.<Object>} zone\n   * @param {number} index\n   * @return {{generator: Object, generatorInfo: Array.<Object>}}\n   * @private\n   */\n  createInstrumentGenerator_(zone, index) {\n    const modgen = this.createBagModGen_(\n      zone,\n      zone[index].instrumentGeneratorIndex,\n      zone[index + 1] ? zone[index + 1].instrumentGeneratorIndex : this.instrumentZoneGenerator.length,\n      this.instrumentZoneGenerator,\n    );\n\n    return {\n      generator: modgen.modgen,\n      generatorInfo: modgen.modgenInfo,\n    };\n  };\n\n  /**\n   * @param {Array.<Object>} zone\n   * @param {number} index\n   * @return {{modulator: Object, modulatorInfo: Array.<Object>}}\n   * @private\n   */\n  createInstrumentModulator_(zone, index) {\n    const modgen = this.createBagModGen_(\n      zone,\n      zone[index].presetModulatorIndex,\n      zone[index + 1] ? zone[index + 1].instrumentModulatorIndex : this.instrumentZoneModulator.length,\n      this.instrumentZoneModulator,\n    );\n\n    return {\n      modulator: modgen.modgen,\n      modulatorInfo: modgen.modgenInfo,\n    };\n  };\n\n  /**\n   * @param {Array.<Object>} zone\n   * @param {number} index\n   * @return {{generator: Object, generatorInfo: Array.<Object>}}\n   * @private\n   */\n  createPresetGenerator_(zone, index) {\n    const modgen = this.createBagModGen_(\n      zone,\n      zone[index].presetGeneratorIndex,\n      zone[index + 1] ? zone[index + 1].presetGeneratorIndex : this.presetZoneGenerator.length,\n      this.presetZoneGenerator,\n    );\n\n    return {\n      generator: modgen.modgen,\n      generatorInfo: modgen.modgenInfo,\n    };\n  };\n\n  /**\n   * @param {Array.<Object>} zone\n   * @param {number} index\n   * @return {{modulator: Object, modulatorInfo: Array.<Object>}}\n   * @private\n   */\n  createPresetModulator_(zone, index) {\n    /** @type {{modgen: Object, modgenInfo: Array.<Object>}} */\n    const modgen = this.createBagModGen_(\n      zone,\n      zone[index].presetModulatorIndex,\n      zone[index + 1] ? zone[index + 1].presetModulatorIndex : this.presetZoneModulator.length,\n      this.presetZoneModulator,\n    );\n\n    return {\n      modulator: modgen.modgen,\n      modulatorInfo: modgen.modgenInfo,\n    };\n  };\n\n  /**\n   * @param {Array.<Object>} zone\n   * @param {number} indexStart\n   * @param {number} indexEnd\n   * @param {Array} zoneModGen\n   * @return {{modgen: Object, modgenInfo: Array.<Object>}}\n   * @private\n   */\n  createBagModGen_(zone, indexStart, indexEnd, zoneModGen) {\n    /** @type {Array.<Object>} */\n    const modgenInfo = [];\n    /** @type {Object} */\n    const modgen = {\n      'unknown': [],\n      'keyRange': {\n        hi: 127,\n        lo: 0,\n      },\n    }; // TODO\n    /** @type {Object} */\n    let info;\n    /** @type {number} */\n    let i;\n    /** @type {number} */\n    let il;\n\n    for (i = indexStart, il = indexEnd; i < il; ++i) {\n      info = zoneModGen[i];\n      modgenInfo.push(info);\n\n      if (info.type === 'unknown') {\n        modgen.unknown.push(info.value);\n      } else {\n        modgen[info.type] = info.value;\n      }\n    }\n\n    return {\n      modgen: modgen,\n      modgenInfo: modgenInfo,\n    };\n  }\n}\n\nexport default Parser;\n"],"sourceRoot":""}